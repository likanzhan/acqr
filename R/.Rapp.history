for (pi in c(0.4, 0.6)) dnbinom(0:10, 2, 0.4)
for (pi in c(0.4, 0.6)) {dnbinom(0:10, 2, 0.4)}
for (pi in c(0.4, 0.6)) dnbinom(0:10, 2, c(0.4, 0.6))
dnbinom(0:10, 2, c(0.4, 0.6))
dnbinom(0:10, 2, 0.4)
dnbinom(0:10, 2, 0.6)
?"for"
dnbinom()
for (r in c(1, 3, 5) dnbinom(1, r, 0.6)
for (r in c(1, 3, 5)) dnbinom(1, r, 0.6)
for (r in c(1, 3, 5)) dnorm(1, r, 0.6)
dnorm(1, 1:3, 0.6)
dnorm(1, 1:3, 0.4:0.6)
dnorm(1, 1:3, 0.4)
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
plot_pdf <- function(rr, pipi, show_x_lab = FALSE,  show_y_lab = FALSE, show_x_panel_lab = FALSE, show_y_panel_lab = FALSE) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- max(yy)#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, show_x_lab = FALSE,  show_y_lab = FALSE, show_x_panel_lab = FALSE, show_y_panel_lab = FALSE) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(r), length(pi)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()dnorm(1, 1:3, 0.4)
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
plot_pdf <- function(rr, pipi, show_x_lab = FALSE,  show_y_lab = FALSE, show_x_panel_lab = FALSE, show_y_panel_lab = FALSE) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- max(yy)#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, show_x_lab = FALSE,  show_y_lab = FALSE, show_x_panel_lab = FALSE, show_y_panel_lab = FALSE) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(r), length(pi)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
plot_pdf <- function(rr, pipi, show_x_lab = FALSE,  show_y_lab = FALSE, show_x_panel_lab = FALSE, show_y_panel_lab = FALSE) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- max(yy)#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, show_x_lab = FALSE,  show_y_lab = FALSE, show_x_panel_lab = FALSE, show_y_panel_lab = FALSE) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(r), length(pi)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
plot_pdf <- function(rr, pipi, show_x_lab = FALSE,  show_y_lab = FALSE, show_x_panel_lab = FALSE, show_y_panel_lab = FALSE) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- max(yy)#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, show_x_lab = FALSE,  show_y_lab = FALSE, show_x_panel_lab = FALSE, show_y_panel_lab = FALSE) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
plot_pdf <- function(rr, pipi, show_x_lab = FALSE,  show_y_lab = FALSE, show_x_panel_lab = FALSE, show_y_panel_lab = FALSE) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- max(yy)#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, show_x_lab = FALSE,  show_y_lab = FALSE, show_x_panel_lab = FALSE, show_y_panel_lab = FALSE) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()
dnbinom(0:10, 1, 0.4)
dnbinom(0:10, c(1, 3, 5), 0.4)
max(dnbinom(0:10, c(1, 3, 5), 0.4))
max(dnbinom(0:10, 1, 0.4))
for (i in c(1, 3, 5)) max(dnbinom(0:10, i, 0.4))
for (i in c(1, 3, 5)) print(max(dnbinom(0:10, i, 0.4)))
for(r in c(1, 3, 5)) for (pi in c(0.4, 0.6))  print(max(dnbinom(0:10, r, pi)))
max (for(r in c(1, 3, 5)) for (pi in c(0.4, 0.6))  print(max(dnbinom(0:10, r, pi))))
x <- for(r in c(1, 3, 5)) for (pi in c(0.4, 0.6))  print(max(dnbinom(0:10, r, pi)))
x <- for(r in c(1, 3, 5)) for (pi in c(0.4, 0.6))  max(dnbinom(0:10, r, pi))
x
x <- for(r in c(1, 3, 5)) for (pi in c(0.4, 0.6))  print(max(dnbinom(0:10, r, pi)))
x
for(r in c(1, 3, 5)) for (pi in c(0.4, 0.6))  print(max(dnbinom(0:10, r, pi)))
for(r in c(1, 3, 5)) for (pi in c(0.4, 0.6))  x <- max(dnbinom(0:10, r, pi))
x
for(r in c(1, 3, 5)) for (pi in c(0.4, 0.6))  x <- max(dnbinom(0:10, r, pi))
xx <- function(pipi) dnbinom(0:10, rr, pipi)#
#
xx(c(2, 3))
xx <- function(rr, pipi) dnbinom(0:10, rr, pipi)#
#
xx(c(2, 3))
sapply(c(1, 3), FUN = function(rr) sapply(c(0.4, 0.6), dnbinom(9:10, rr, pipi)))
sapply(c(1, 3), FUN = function(rr) sapply(c(0.4, 0.6), FUN = function(pipi) dnbinom(9:10, rr, pipi)))
max(sapply(c(1, 3), FUN = function(rr) sapply(c(0.4, 0.6), FUN = function(pipi) dnbinom(9:10, rr, pipi))))
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- max(sapply(r, FUN = function(rr) sapply(c, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(c, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density(,,T)
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density(,,)
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.01),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.9, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.6, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.5), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.9, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.6, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.5), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.9, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.6, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density(,,T)
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.5), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.9, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.6, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density(3,0.4,T)
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_cumulative_density = FALSE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.5), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.9, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.6, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_cumulative_density) {#
	plot_cdf(rr, pipi, #
	show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
	mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
        side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
		plot_pdf(rr, pipi, #
		show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
		)#
        mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density(3,0.4,F)
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_density_function = TRUE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.5), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.9, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.6, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_density_function) {#
    plot_pdf(rr, pipi, #
    show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
    mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
	    plot_cdf(rr, pipi, #
	    show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	    )#
	    mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
            side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density()
Plot_Negative_Binomial_Density <- function (#
r = c(1, 3, 5),#
pi = c(0.4, 0.6),#
plot_density_function = TRUE,#
xx = 0:10#
){#
ymaxd <- max(sapply(r, FUN = function(rr) sapply(pi, FUN = function(pipi) dnbinom(xx, rr, pipi))))#
plot_pdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dnbinom(xx, rr, pipi)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.5), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.9, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.6, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dnbinom(xx, rr, pipi) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(pi), length(r)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in r) for (pipi in pi) if (plot_density_function) {#
    plot_pdf(rr, pipi, #
    show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
    mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
	    plot_cdf(rr, pipi, #
	    show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	    )#
	    mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
            side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_Negative_Binomial_Density(,,F)
dhyper()
Plot_hypergeometric_Density <- function (#
m = c(10, 40, 60),#
n = 10,#
k = c(5, 20),#
xx = 0:20,#
plot_density_function = TRUE#
){#
ymaxd <- max(sapply(m, FUN = function(mm) sapply(k, FUN = function(kk) dnbinom(xx, mm, n, kk))))#
plot_pdf <- function(mm, kk, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dhyper(xx, mm, n, kk)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.5), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.9, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.6, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(rr, pipi, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dhyper(xx, mm, n, kk) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(k), length(m)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (rr in m) for (pipi in k) if (plot_density_function) {#
    plot_pdf(rr, pipi, #
    show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	)#
    mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
	    plot_cdf(rr, pipi, #
	    show_y_lab = (rr == min(r)), show_x_lab = (pipi == max(pi)),#
	    show_y_panel_lab = (rr == max(r)),show_x_panel_lab = (pipi == min(pi))#
	    )#
	    mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
            side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_hypergeometric_Density()
Plot_hypergeometric_Density <- function (#
m = c(10, 40, 60),#
n = 10,#
k = c(5, 20),#
xx = 0:20,#
plot_density_function = TRUE#
){#
ymaxd <- max(sapply(m, FUN = function(mm) sapply(k, FUN = function(kk) dnbinom(xx, mm, n, kk))))#
plot_pdf <- function(mm, kk, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dhyper(xx, mm, n, kk)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.5), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.9, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.6, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(mm, kk, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dhyper(xx, mm, n, kk) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(k), length(m)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (mm in m) for (kk in k) if (plot_density_function) {#
    plot_pdf(mm, kk, #
    show_y_lab = (mm == min(m)), show_x_lab = (kk == max(k)),#
	show_y_panel_lab = (mm == max(m)),show_x_panel_lab = (kk == min(k))#
	)#
    mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
	    plot_cdf(mm, kk, #
	    show_y_lab = (mm == min(m)), show_x_lab = (kk == max(k)),#
	    show_y_panel_lab = (mm == max(m)),show_x_panel_lab = (kk == min(k))#
	    )#
	    mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
            side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_hypergeometric_Density()
Plot_hypergeometric_Density <- function (#
m = c(10, 40, 60),#
n = 10,#
k = c(5, 20),#
xx = 0:20,#
plot_density_function = TRUE#
){#
ymaxd <- max(sapply(m, FUN = function(mm) sapply(k, FUN = function(kk) dhyper(xx, mm, n, kk))))#
plot_pdf <- function(mm, kk, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dhyper(xx, mm, n, kk)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.5), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.9, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.6, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))	#
  }#
  }#
plot_cdf <- function(mm, kk, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dhyper(xx, mm, n, kk) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(pi == .(pipi)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(r == .(rr)))#
  }#
  }#
par(#
  mfcol = c(length(k), length(m)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (mm in m) for (kk in k) if (plot_density_function) {#
    plot_pdf(mm, kk, #
    show_y_lab = (mm == min(m)), show_x_lab = (kk == max(k)),#
	show_y_panel_lab = (mm == max(m)),show_x_panel_lab = (kk == min(k))#
	)#
    mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
	    plot_cdf(mm, kk, #
	    show_y_lab = (mm == min(m)), show_x_lab = (kk == max(k)),#
	    show_y_panel_lab = (mm == max(m)),show_x_panel_lab = (kk == min(k))#
	    )#
	    mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
            side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_hypergeometric_Density()
Plot_hypergeometric_Density <- function (#
m = c(10, 40, 60),#
n = 10,#
k = c(5, 20),#
xx = 0:20,#
plot_density_function = TRUE#
){#
ymaxd <- max(sapply(m, FUN = function(mm) sapply(k, FUN = function(kk) dhyper(xx, mm, n, kk))))#
plot_pdf <- function(mm, kk, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  yy <- dhyper(xx, mm, n, kk)#
  xmax <- max(xx)#
  ymax <- ymaxd#
  plot(xx, yy, xlim = c(0, xmax + 0.5), ylim = c(0, ymax * 1.1),#
    type = "h", axes = FALSE,  xlab = "", ylab = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  points(xx, yy, pch = 16, col = "#6EA7CB", cex = 1.5)#
  if (show_y_panel_lab) {#
    rect(xmax + 0.3, -1, xmax + 0.9, ymax * 1.02, col = "gray", border = "gray")#
    text(xmax + 0.6, ymax / 2, srt = -90, label = bquote(k == .(kk)))	#
  }#
  if (show_x_panel_lab){#
    rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
    text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(m == .(mm)))	#
  }#
  }#
plot_cdf <- function(mm, kk, #
  show_x_lab = FALSE,  show_y_lab = FALSE, #
  show_x_panel_lab = FALSE, show_y_panel_lab = FALSE#
  ) {#
  xs <- rep(xx, round(dhyper(xx, mm, n, kk) * 100000, 0))#
  yy <- ecdf(xs)#
  xmax <- max(xx)#
  ymax <- max(yy(xx))#
  plot(yy, xlim = c(0, xmax + 0.3), ylim = c(0, ymax * 1.05), #
    xlab = "", ylab = "", axes = FALSE, #
    col.points = "#6EA7CB", cex.points = 1.5, main = "")#
  axis(2, lwd = 1, at = c(-0.1, ymax * 1.1), labels = c("", ""), #
    lwd.ticks = 0, col = "gray")#
  if (show_y_lab) axis(2, lwd = 0, lwd.ticks = 1, las = 1)#
  axis(1, lwd = 1, at = c(-1, xmax + 0.3), #
    labels = c("", ""), lwd.ticks = 0, col = "gray")#
  if (show_x_lab) axis(1, lwd = 0, lwd.ticks = 1, las = 1)#
  if (show_y_panel_lab) {#
  rect(xmax + 0.3, -1, xmax + 0.7, ymax * 1.02, col = "gray", border = "gray")#
  text(xmax + 0.5, ymax / 2, srt = -90, label = bquote(k == .(kk)))#
  }#
    if (show_x_panel_lab){#
  rect(-0.5, ymax * 1.02, xmax + 0.3, ymax * 1.1, col = "gray", border = "gray")#
  text(xmax / 2, ymax * 1.06, srt = 0, label = bquote(m == .(mm)))#
  }#
  }#
par(#
  mfcol = c(length(k), length(m)), #
  mai = c(0, 0, 0, 0),#
  oma = c(4, 4.5, 0.5, 0.5),#
  pty = "m")#
for (mm in m) for (kk in k) if (plot_density_function) {#
    plot_pdf(mm, kk, #
    show_y_lab = (mm == min(m)), show_x_lab = (kk == max(k)),#
	show_y_panel_lab = (mm == max(m)),show_x_panel_lab = (kk == min(k))#
	)#
    mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
    mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X==x[i])))),#
          side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
	} else {#
	    plot_cdf(mm, kk, #
	    show_y_lab = (mm == min(m)), show_x_lab = (kk == max(k)),#
	    show_y_panel_lab = (mm == max(m)),show_x_panel_lab = (kk == min(k))#
	    )#
	    mtext(text = bquote(italic("x")), side = 1, line = 2.5, las = 1, outer = TRUE)#
        mtext(text = bquote(bold("PDF (probability density function)"~italic(P(X<=x[i])))),#
            side = 2, at = 0.5, las = 3, line = 2.5, outer = TRUE)#
          }#
}#
Plot_hypergeometric_Density()
curve()
ff <- 1 / (b - a)
ff <- function(a, b) 1 / (b - a)
curve(ff, 0, 8)
curve(ff(0, 8), 0, 8)
curve(ff, 0, 8)
ff(0,0)
ff(0, 1)
ff(0, 0.1)
dunif(10)
dunif(-1, 2)
dunif(-1:2)
ff <- function(x, a, b) {#
	if (a > b) {#
	 stop("a should not be bigger than b")#
	} else {#
	     if (a =< x <= b) 1/(b - a) else 0		#
	    }#
}
ff <- function(x, a, b) {#
	if (a > b) {#
	 stop("a should not be bigger than b")#
	} else {#
	     if (a =< x & x <= b) 1/(b - a) else 0		#
	    }#
}
ff <- function(x, a, b) {#
	if (a > b) {#
	 stop("a should not be bigger than b")#
	} else {#
	     if (a <= x & x <= b) 1/(b - a) else 0		#
	    }#
}
ff(2, 1, 2)
curve(ff(,1, 2), 1, 2)
ff <- function(x, a, b) {#
	if (a > b) {#
	 stop("a should not be bigger than b")#
	} else {#
	     if (a <= x & x <= b) 1/(b - a) else 0		#
	    }#
}#
#
ft <- function(x) ff(x, 1, 2)
ft(0:2)
ft(1)
ft(1.1)
curve(ft, 1, 2)
?curve
ft(1)
curve(ft, 1, 2)
?curve
ff <- function(x, a, b) {#
	if (a > b) {#
	 stop("a should not be bigger than b")#
	} else {#
	     if (a <= x & x <= b) 1/(b - a) else 0		#
	    }#
}#
#
ft <- function(x) ff(x, 1, 20)
curve(ft, 1, 20)
ft(1)
ft(20)
ft(21)
ft(0)
curve(ft, 1, 20)ff <- function(x, a, b) {#
	if (a > b) {#
	 stop("a should not be bigger than b")#
	} else {#
	     if (a <= x && x <= b) 1/(b - a) else 0		#
	    }#
}#
#
ft <- function(x) ff(x, 1, 2)#
curve(ft, 1, 2)
ff <- function(x, a, b) {#
	if (a > b) {#
	 stop("a should not be bigger than b")#
	} else {#
	     if (a <= x && x <= b) 1/(b - a) else 0		#
	    }#
}#
#
ft <- function(x) ff(x, 1, 2)#
curve(ft, 1, 2)
curve
ff <- function(x, a, b) {#
	if (a > b) {#
	 stop("a should not be bigger than b")#
	} else {#
	     if (a <= x && x <= b) 1/(b - a) else 0		#
	    }#
}#
#
ft <- function(x) ff(x, 1, 2)#
curve(ft, 1, 2, n=10)
x <- seq.int(from, to, length.out = n)
x <- seq.int(1, 2, length.out = 101)
x
ft(x)
for(xx in x) ft(x)
sapply(x, ft)
x <- seq.int(0, 3, length.out = 101)
sapply(x, ft)
dunif(x, 1, 2)
dunif(x, 1, 200)
ff <- function(x, a, b) {#
	if (a > b) {#
	 stop("a should not be bigger than b")#
	} else {#
	     if (a <= x && x <= b) 1/(b - a) else 0		#
	    }#
}#
#
ft <- function(x) ff(x, 1, 2)#
curve(ft, 0, 3)
ff <- function(x, a, b) {#
	if (a > b) {#
	 stop("a should not be bigger than b")#
	} else {#
	     if (a <= x && x <= b) {#
	     	1/(b - a) #
	        } else 0		#
	    }#
}
ff(2, 3, 2)
ff <- function(x, a, b) {#
	if (a > b) {#
	 stop("`a' should not be bigger than `b'")#
	} else {#
	     if (a <= x && x <= b) {#
	     	1/(b - a) #
	        } else 0		#
	    }#
}#
#
ft <- function(x) ff(x, 1, 2)#
curve(ft, 0, 3)
ff <- function(x, a, b) {#
	if (a > b) {#
	 stop("`a' should not be bigger than `b'")#
	} else {#
	     if (a <= x && x <= b) {#
	     	1/(b - a) #
	        } else 0		#
	    }#
}
curve(dunif, 0, 1)
curve(dunif, -1, 2)
dunif
dunifff <- function(x, a = 0, b = 1) {#
	if (a > b) {#
	 stop("`a' should not be bigger than `b'")#
	} else {#
	     if (a <= x && x <= b) {#
	     	1/(b - a) #
	        } else 0		#
	    }#
}#
#
curve(ff, -1, 2)
ff <- function(x, a = 0, b = 1) {#
	if (a > b) {#
	 stop("`a' should not be bigger than `b'")#
	} else {#
	     if (a <= x && x <= b) {#
	     	1/(b - a) #
	        } else 0		#
	    }#
}#
#
curve(ff, -1, 2)
ff <- function(x, a = 0, b = 1) {#
	if (a > b) {#
	 stop("`a' should not be bigger than `b'")#
	} else {#
	     if (x < a | x > b) {#
	     	0  #
	        } else {#
	         1 / (b - a)#
	        }		#
	    }#
}#
#
curve(ff, -1, 2)
ff <- function(x, a = 0, b = 1) {#
	if (a > b) {#
	 stop("`a' should not be bigger than `b'")#
	} else {#
	     if (x < a || x > b) {#
	     	0  #
	        } else {#
	         1 / (b - a)#
	        }		#
	    }#
}#
#
curve(ff, -1, 2)
ff <- function(x, a = 0, b = 1) {#
	if (a > b) {#
	 stop("`a' should not be bigger than `b'")#
	} else {#
	     iff <- function(x, a = 0, b = 1) {#
	if (a > b) {#
	 stop("`a' should not be bigger than `b'")#
	} else {#
	     if (x >= a && x <= b) 1 / (b - a) else 0#
	     }#
}#
}#
#
curve(ff, -1, 2)
ff <- function(x, a = 0, b = 1) {#
	if (a > b) {#
	 stop("`a' should not be bigger than `b'")#
	} else {#
	     if (x >= a && x <= b) 1 / (b - a) else 0#
	     }#
}
ff(1)
ff(0)
ff(-1)
curve(ff, -1, 2)
'if'
?'if'
curve
curve(ff <- function(x, a = 0, b = 1) {#
	if (a > b) {#
	 stop("`a' should not be bigger than `b'")#
	} else {#
	     if (x >= a && x <= b) 1 / (b - a) else 0#
	     }#
})
ff <- function(x, a = 0, b = 1) {#
	if (a > b) {#
	 stop("`a' should not be bigger than `b'")#
	} else {#
	     if (x >= a && x <= b) 1 / (b - a) else 0#
	     }#
}
ff(2)
curve(ff, -1, 2)
ff <- function(x, a = 0, b = 1) {#
	if (a > b) {#
	 stop("`a' should not be bigger than `b'")#
	} else {#
	     if (x >= a && x <= b) 1 / (b - a) else 0#
	     }#
}#
fv <- Vectorize(ff)#
#
curve(fv, -1, 2)
?Vectorize
ff <- function(x, a = 0, b = 1) {#
	if (a > b) stop("`a' should not be bigger than `b'") else if (x >= a && x <= b) 1 / (b - a) else 0#
}#
fv <- Vectorize(ff)#
curve(fv, -1, 2)
ff <- function(x, a = 0, b = 1) {#
    if (a > b) {#
	    stop("`a' should not be bigger than `b'") 	#
	} else if (x >= a && x <= b) {#
		1 / (b - a)#
		} else 0#
}#
fv <- Vectorize(ff)#
curve(fv, -1, 2)
?Vectorize
fv
ft
ff
fv
?Vectorize
polygon
try(RCurl::url.exists("https://www.frontiersin.org/articles/10.3389/frym.2017.00072/pdf", .header = TRUE))
try(RCurl::url.exists("https://www.frontiersin.org/articles/10.3389/frym.2017.00071/pdf"))
help(, RCurl)
GET("https://www.frontiersin.org/articles/10.3389/frym.2017.00071/pdf")
httr::GET("https://www.frontiersin.org/articles/10.3389/frym.2017.00071/pdf")
help(,httr)
?download.file
url.exists("https://www.frontiersin.org/articles/10.3389/frym.2017.00071/pdf", useragent="curl/7.39.0 Rcurl/1.95.4.5")
library(RCurl)
url.exists("https://www.frontiersin.org/articles/10.3389/frym.2017.00071/pdf", useragent="curl/7.39.0 Rcurl/1.95.4.5")
url.exists("https://www.frontiersin.org", useragent="curl/7.39.0 Rcurl/1.95.4.5")
url.exists("https://www.frontiersin.org/articles", useragent="curl/7.39.0 Rcurl/1.95.4.5")
url.exists("https://www.frontiersin.org/articles")
url.exists("https://www.frontiersin.org")
?url.exists("https://www.frontiersin.org")
url.exists("https://www.frontiersin.org", curl)
url.exists("https://www.frontiersin.org", curl="/articles/10.3389/frym.2017.00071/pdf")
url.exists("https://www.frontiersin.org")
getURL("http://stackoverflow.com")
formatC
?formatC
folder = "Provided_by_Author";#
  path = "/Users/lzhan/Dropbox/Apps/updog/appendix/"
directory <- paste(path, folder, sep = "")#
  output_file <- paste(directory, "/index.html", sep = "")#
  files <- list.files(path = directory)
fils
files
files0 <- files[files != "index.html"]
files0
list.files()
?list.files()
index_html <- function(#
  path = "~/Dropbox/Apps/updog/appendix"#
){#
  folder <- basename(path)#
  output_file <- paste(path, "/index.html", sep = "")#
  files <- list.files(path, full.names = TRUE)#
  files <- files[basename(files) != "index.html"]#
  files_dir <- #
  pre_list <- paste(#
    "<!DOCTYPE html>", "\n", #
    "<html>", "\n",#
    "<head>", "\n",#
    "<title> ", folder, " </title>", "\n",#
    "</head>", "\n", #
    "<body>", "\n",#
    "<ul>", "\n", sep = "")#
  post_list <- paste(#
    "</ul>", "\n", #
    "</body>", "\n", #
    "</html>", sep = "")#
  item <- function(i) {#
  	  i_dir <- ifelse(file_test("-d", i), paste(basename(i), "/index.html", sep = ""), i)#
      paste("<li> ", "<a href=", "\"", i_dir, "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  }#
  file_list <- sapply(files, item, USE.NAMES = FALSE)#
  document <- c(pre_list, file_list, post_list)#
  cat(document, file = output_file)	#
}
index_html()
index_html <- function(#
  path = "~/Dropbox/Apps/updog/appendix"#
){#
  files <- list.files(path, full.names = TRUE)#
  files <- files[basename(files) != "index.html"]#
  pre_list <- paste(#
    "<!DOCTYPE html>", "\n", #
    "<html>", "\n",#
    "<head>", "\n",#
    "<title> ", basename(path), " </title>", "\n",#
    "</head>", "\n", #
    "<body>", "\n",#
    "<ul>", "\n", sep = "")#
  post_list <- paste(#
    "</ul>", "\n", #
    "</body>", "\n", #
    "</html>", sep = "")#
  item <- function(i) {#
  	  i_dir <- ifelse(file_test("-d", i), paste(basename(i), "/", sep = ""), i)#
      paste("<li> ", "<a href=", "\"", i_dir, "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  }#
  file_list <- sapply(files, item, USE.NAMES = FALSE)#
  document <- c(pre_list, file_list, post_list)#
  cat(document, file = paste(path, "/index.html", sep = ""))	#
}
index_html()
index_html <- function(#
  path = "~/Dropbox/Apps/updog/appendix"#
){#
  files <- list.files(path, full.names = TRUE)#
  files <- files[basename(files) != "index.html"]#
  pre_list <- paste(#
    "<!DOCTYPE html>", "\n", #
    "<html>", "\n",#
    "<head>", "\n",#
    "<title> ", basename(path), " </title>", "\n",#
    "<meta charset=", "\"", "utf-8", "\"", ">", "\n",#
    "</head>", "\n", #
    "<body>", "\n",#
    "<ul>", "\n", sep = "")#
  post_list <- paste(#
    "</ul>", "\n", #
    "</body>", "\n", #
    "</html>", sep = "")#
  item <- function(i) {#
  	  i_dir <- ifelse(file_test("-d", i), paste(basename(i), "/index.html", sep = ""), i)#
      paste("<li> ", "<a href=", "\"", i_dir, "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  }#
  file_list <- sapply(files, item, USE.NAMES = FALSE)#
  document <- c(pre_list, file_list, post_list)#
  cat(document, file = paste(path, "/index.html", sep = ""))	#
}
index_html("~/Downloads")
path = "~/Dropbox/Apps/updog/appendix"
files <- list.files(path, full.names = TRUE)#
  files <- files[basename(files) != "index.html"]#
  folder_list <- files[file_test("-d", files)]
folder_list
files <- list.files(path, full.names = TRUE)#
  files <- files[basename(files) != "index.html"]#
  folder_list <- files[file_test("-d", files)]
files
file_list <- files[file_test("-f", files)]
file_list
files <- list.files(path, full.names = TRUE)#
  files <- files[basename(files) != "index.html"]#
  folder_list <- files[file_test("-d", files)]
file_list <- files[file_test("-f", files)]
file_list
?list.files
create_index_html <- function(#
  path = "~/Dropbox/Apps/updog/appendix"#
){#
  files_all <- list.files(path, full.names = TRUE)#
  files_all <- files[basename(files) != "index.html"]#
  folder_list <- files_all[file_test("-d", files_all)] # directory#
  file_list   <- files_all[file_test("-f", files_all)] # files #
  folder_item <- function(i) paste("<li> ", "<a href=", "\"", basename(i), "/index.html", "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  file_item   <- function(i) paste("<li> ", "<a href=", "\"", basename(i),                "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  folder_list <- sapply(folder_list, folder_item, USE.NAMES = FALSE)  #
  file_list   <- sapply(file_list, file_item, USE.NAMES = FALSE)#
  folder_section <- c("<li> Folders </li>", "<ul>", "\n", folder_list, "</ul>", "\n")#
  file_section   <- c("<li> Files </li>",   "<ul>", "\n", file_list,   "</ul>", "\n")#
  document_pre <- paste(#
    "<!DOCTYPE html>", "\n", #
    "<html>", "\n",#
    "<head>", "\n",#
    "<title> ", basename(path), " </title>", "\n",#
    "<meta charset=", "\"", "utf-8", "\"", ">", "\n",#
    "</head>", "\n", #
    "<body>", "\n", #
    "<ol>", sep = "")#
  document_post <- paste("</ol>", "</body>", "\n", "</html>", sep = "")#
  document_full <- c(document_pre, folder_section, file_section, document_post)#
  cat(document_full, file = paste(path, "/index.html", sep = ""))	#
}
create_index_html()
path = "~/Dropbox/Apps/updog/appendix"
files_all <- list.files(path, full.names = TRUE)#
  files_all <- files[basename(files) != "index.html"]#
  folder_list <- files_all[file_test("-d", files_all)] # directory#
  file_list   <- files_all[file_test("-f", files_all)] # files #
  folder_item <- function(i) paste("<li> ", "<a href=", "\"", basename(i), "/index.html", "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  file_item   <- function(i) paste("<li> ", "<a href=", "\"", basename(i),                "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  folder_list <- sapply(folder_list, folder_item, USE.NAMES = FALSE)  #
  file_list   <- sapply(file_list, file_item, USE.NAMES = FALSE)#
  folder_section <- c("<li> Folders </li>", "<ul>", "\n", folder_list, "</ul>", "\n")#
  file_section   <- c("<li> Files </li>",   "<ul>", "\n", file_list,   "</ul>", "\n")
file_section
file_list
folder_list
create_index_html()
files_all <- list.files(path, full.names = TRUE)#
  files_all <- files[basename(files) != "index.html"]#
  folder_list <- files_all[file_test("-d", files_all)] # directory#
  file_list   <- files_all[file_test("-f", files_all)] # files #
  folder_item <- function(i) paste("<li> ", "<a href=", "\"", basename(i), "/index.html", "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  file_item   <- function(i) paste("<li> ", "<a href=", "\"", basename(i),                "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  folder_list <- sapply(folder_list, folder_item, USE.NAMES = FALSE)  #
  file_list   <- sapply(file_list, file_item, USE.NAMES = FALSE)#
  folder_section <- c("<li> Folders </li>", "<ul>", "\n", folder_list, "</ul>", "\n")#
  file_section   <- c("<li> Files </li>",   "<ul>", "\n", file_list,   "</ul>", "\n")
file_section
folder_list
str(folder_list)
folder_section <- c("<li> Folders </li>", "\n", "<ul>", "\n", folder_list, "</ul>", "\n")
folder_section
file_section
str(folder_section)
file_list
file_section
files_all <- list.files(path, full.names = TRUE)
files_all
file_list   <- files_all[file_test("-f", files_all)] # files
files_list
file_list
file_item   <- function(i) paste("<li> ", "<a href=", "\"", basename(i),                "\"", "> ", basename(i), " </li>", "\n", sep = "")
file_item
file_list   <- sapply(file_list, file_item, USE.NAMES = FALSE)
file_list
file_section   <- c("<li> Files </li>",   "<ul>", "\n", file_list,   "</ul>", "\n")
file_section
folder_section <- c("<li> Folders </li>", "\n", "<ul>", "\n", folder_list, "</ul>", "\n")
folder_section
document_pre <- paste(#
    "<!DOCTYPE html>", "\n", #
    "<html>", "\n",#
    "<head>", "\n",#
    "<title> ", basename(path), " </title>", "\n",#
    "<meta charset=", "\"", "utf-8", "\"", ">", "\n",#
    "</head>", "\n", #
    "<body>", "\n", #
    "<ol>", sep = "")#
  document_post <- paste("</ol>", "</body>", "\n", "</html>", sep = "")
document_full <- c(document_pre, folder_section, file_section, document_post)
document_full
cat(document_full, file = paste(path, "/index.html", sep = ""))
create_index_html <- function(#
  path = "~/Dropbox/Apps/updog/appendix"#
){#
  files_all <- list.files(path, full.names = TRUE)#
  files_all <- files[basename(files) != "index.html"]#
  folder_list <- files_all[file_test("-d", files_all)] # directory#
  file_list   <- files_all[file_test("-f", files_all)] # files #
  folder_item <- function(i) paste("<li> ", "<a href=", "\"", basename(i), "/index.html", "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  file_item   <- function(i) paste("<li> ", "<a href=", "\"", basename(i),                "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  folder_list <- sapply(folder_list, folder_item, USE.NAMES = FALSE)  #
  file_list   <- sapply(file_list, file_item, USE.NAMES = FALSE)#
  folder_section <- c("<li> Folders </li>", "\n", "<ul>", "\n", folder_list, "</ul>", "\n")#
  file_section   <- c("<li> Files </li>",   "<ul>", "\n", file_list,   "</ul>", "\n")#
  document_pre <- paste(#
    "<!DOCTYPE html>", "\n", #
    "<html>", "\n",#
    "<head>", "\n",#
    "<title> ", basename(path), " </title>", "\n",#
    "<meta charset=", "\"", "utf-8", "\"", ">", "\n",#
    "</head>", "\n", #
    "<body>", "\n", #
    "<ol>", sep = "")#
  document_post <- paste("</ol>", "</body>", "\n", "</html>", sep = "")#
  document_full <- c(document_pre, folder_section, file_section, document_post)#
  cat(document_full, file = paste(path, "/index.html", sep = ""))	#
}
create_index_html
create_index_html()
files_all <- list.files(path, full.names = TRUE)#
  files_all <- files[basename(files) != "index.html"]#
  folder_list <- files_all[file_test("-d", files_all)] # directory#
  file_list   <- files_all[file_test("-f", files_all)] # files #
  folder_item <- function(i) paste("<li> ", "<a href=", "\"", basename(i), "/index.html", "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  file_item   <- function(i) paste("<li> ", "<a href=", "\"", basename(i),                "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  folder_list <- sapply(folder_list, folder_item, USE.NAMES = FALSE)  #
  file_list   <- sapply(file_list, file_item, USE.NAMES = FALSE)#
  folder_section <- c("<li> Folders </li>", "\n", "<ul>", "\n", folder_list, "</ul>", "\n")#
  file_section   <- c("<li> Files </li>",   "<ul>", "\n", file_list,   "</ul>", "\n")
file_list
is.na(file_list)
length(file_list)
c(NULL)
create_index_html <- function(#
  path = "~/Dropbox/Apps/updog/appendix"#
){#
  files_all <- list.files(path, full.names = TRUE)#
  files_all <- files[basename(files) != "index.html"]#
  folder_list <- files_all[file_test("-d", files_all)] # directory#
  file_list   <- files_all[file_test("-f", files_all)] # files #
  folder_item <- function(i) paste("<li> ", "<a href=", "\"", basename(i), "/index.html", "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  file_item   <- function(i) paste("<li> ", "<a href=", "\"", basename(i),                "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  folder_list <- sapply(folder_list, folder_item, USE.NAMES = FALSE)  #
  file_list   <- sapply(file_list, file_item, USE.NAMES = FALSE)#
  folder_section <- c("<li> Folders </li>", "\n", "<ul>", "\n", folder_list, "</ul>", "\n")#
  folder_section <- ifelse(length(folder_list) == 0, NULL, folder_section)#
  file_section   <- c("<li> Files </li>",   "<ul>", "\n", file_list,   "</ul>", "\n")#
  file_section <- ifelse(length(file_list) == 0, NULL, file_section)#
  document_pre <- paste(#
    "<!DOCTYPE html>", "\n", #
    "<html>", "\n",#
    "<head>", "\n",#
    "<title> ", basename(path), " </title>", "\n",#
    "<meta charset=", "\"", "utf-8", "\"", ">", "\n",#
    "</head>", "\n", #
    "<body>", "\n", #
    "<ol>", sep = "")#
  document_post <- paste("</ol>", "</body>", "\n", "</html>", sep = "")#
  document_full <- c(document_pre, length(file_list)folder_section, file_section, document_post)#
  cat(document_full, file = paste(path, "/index.html", sep = ""))	#
}
create_index_html <- function(#
  path = "~/Dropbox/Apps/updog/appendix"#
){#
  files_all <- list.files(path, full.names = TRUE)#
  files_all <- files[basename(files) != "index.html"]#
  folder_list <- files_all[file_test("-d", files_all)] # directory#
  file_list   <- files_all[file_test("-f", files_all)] # files #
  folder_item <- function(i) paste("<li> ", "<a href=", "\"", basename(i), "/index.html", "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  file_item   <- function(i) paste("<li> ", "<a href=", "\"", basename(i),                "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  folder_list <- sapply(folder_list, folder_item, USE.NAMES = FALSE)  #
  file_list   <- sapply(file_list, file_item, USE.NAMES = FALSE)#
  folder_section <- c("<li> Folders </li>", "\n", "<ul>", "\n", folder_list, "</ul>", "\n")#
  folder_section <- ifelse(length(folder_list) == 0, NULL, folder_section)#
  file_section   <- c("<li> Files </li>",   "<ul>", "\n", file_list,   "</ul>", "\n")#
  file_section <- ifelse(length(file_list) == 0, NULL, file_section)#
  document_pre <- paste(#
    "<!DOCTYPE html>", "\n", #
    "<html>", "\n",#
    "<head>", "\n",#
    "<title> ", basename(path), " </title>", "\n",#
    "<meta charset=", "\"", "utf-8", "\"", ">", "\n",#
    "</head>", "\n", #
    "<body>", "\n", #
    "<ol>", sep = "")#
  document_post <- paste("</ol>", "</body>", "\n", "</html>", sep = "")#
  document_full <- c(document_pre, folder_section, file_section, document_post)#
  cat(document_full, file = paste(path, "/index.html", sep = ""))	#
}
create_index_html()
create_index_html <- function(#
  path = "~/Dropbox/Apps/updog/appendix"#
){#
  files_all <- list.files(path, full.names = TRUE)#
  files_all <- files[basename(files) != "index.html"]#
  folder_list <- files_all[file_test("-d", files_all)] # directory#
  file_list   <- files_all[file_test("-f", files_all)] # files #
  folder_item <- function(i) paste("<li> ", "<a href=", "\"", basename(i), "/index.html", "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  file_item   <- function(i) paste("<li> ", "<a href=", "\"", basename(i),                "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  folder_list <- sapply(folder_list, folder_item, USE.NAMES = FALSE)  #
  file_list   <- sapply(file_list, file_item, USE.NAMES = FALSE)#
  folder_section <- c("<li> Folders </li>", "\n", "<ul>", "\n", folder_list, "</ul>", "\n")#
  folder_section <- ifelse(length(folder_list) == 0, "", folder_section)#
  file_section   <- c("<li> Files </li>",   "<ul>", "\n", file_list,   "</ul>", "\n")#
  file_section <- ifelse(length(file_list) == 0, "", file_section)#
  document_pre <- paste(#
    "<!DOCTYPE html>", "\n", #
    "<html>", "\n",#
    "<head>", "\n",#
    "<title> ", basename(path), " </title>", "\n",#
    "<meta charset=", "\"", "utf-8", "\"", ">", "\n",#
    "</head>", "\n", #
    "<body>", "\n", #
    "<ol>", sep = "")#
  document_post <- paste("</ol>", "</body>", "\n", "</html>", sep = "")#
  document_full <- c(document_pre, folder_section, file_section, document_post)#
  cat(document_full, file = paste(path, "/index.html", sep = ""))	#
}
create_index_html()
acqr::create_index_html
acqr::create_index_html()
path = "~/Dropbox/Apps/updog/appendix"
files_all <- list.files(path, full.names = TRUE)#
  files_all <- files_all[basename(files_all) != "index.html"]#
  folder_list <- files_all[file_test("-d", files_all)] # directory#
  file_list   <- files_all[file_test("-f", files_all)] # files #
  folder_item <- function(i) paste("<li> ", "<a href=", "\"", basename(i), "/index.html", "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  file_item   <- function(i) paste("<li> ", "<a href=", "\"", basename(i),                "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  folder_list <- sapply(folder_list, folder_item, USE.NAMES = FALSE)  #
  file_list   <- sapply(file_list, file_item, USE.NAMES = FALSE)#
  folder_section <- c("<li> Folders </li>", "\n", "<ul>", "\n", folder_list, "</ul>", "\n")
folder_section
ifelse(length(folder_list) == 0, "", folder_section)
file_list
create_index_html <- function(#
  path = "~/Dropbox/Apps/updog/appendix"#
){#
  files_all <- list.files(path, full.names = TRUE)#
  files_all <- files_all[basename(files_all) != "index.html"]#
  folder_list <- files_all[file_test("-d", files_all)] # directory#
  file_list   <- files_all[file_test("-f", files_all)] # files #
  folder_item <- function(i) paste("<li> ", "<a href=", "\"", basename(i), "/index.html", "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  file_item   <- function(i) paste("<li> ", "<a href=", "\"", basename(i),                "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  folder_list <- sapply(folder_list, folder_item, USE.NAMES = FALSE)  #
  file_list   <- sapply(file_list, file_item, USE.NAMES = FALSE)#
  if (length(folder_list) == 0) {#
  	folder_section <- ""#
  } else {#
    folder_section <- c("<li> Folders </li>", "\n", "<ul>", "\n", folder_list, "</ul>", "\n")#
  }#
  if (length(file_list) == 0) {#
  	file_section <- ""#
  } else {#
    file_section <- c("<li> Folders </li>", "\n", "<ul>", "\n", file_list, "</ul>", "\n")#
  }#
  document_pre <- paste(#
    "<!DOCTYPE html>", "\n", #
    "<html>", "\n",#
    "<head>", "\n",#
    "<title> ", basename(path), " </title>", "\n",#
    "<meta charset=", "\"", "utf-8", "\"", ">", "\n",#
    "</head>", "\n", #
    "<body>", "\n", #
    "<ol>", sep = "")#
  document_post <- paste("</ol>", "</body>", "\n", "</html>", sep = "")#
  document_full <- c(document_pre, folder_section, file_section, document_post)#
  cat(document_full, file = paste(path, "/index.html", sep = ""))	#
}
create_index_html()
create_index_html("~/Downloads")
create_index_html <- function(#
  path = "~/Dropbox/Apps/updog/appendix"#
){#
  files_all <- list.files(path, full.names = TRUE)#
  files_all <- files_all[basename(files_all) != "index.html"]#
  folder_list <- files_all[file_test("-d", files_all)] # directory#
  file_list   <- files_all[file_test("-f", files_all)] # files #
  folder_item <- function(i) paste("<li> ", "<a href=", "\"", basename(i), "/index.html", "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  file_item   <- function(i) paste("<li> ", "<a href=", "\"", basename(i),                "\"", "> ", basename(i), " </li>", "\n", sep = "")#
  folder_list <- sapply(folder_list, folder_item, USE.NAMES = FALSE)  #
  file_list   <- sapply(file_list, file_item, USE.NAMES = FALSE)#
  if (length(folder_list) == 0) {#
  	folder_section <- ""#
  } else {#
    folder_section <- c("<li> Folders </li>", "\n", "<ul>", "\n", folder_list, "</ul>", "\n")#
  }#
  if (length(file_list) == 0) {#
  	file_section <- ""#
  } else {#
    file_section <- c("<li> Folders </li>", "\n", "<ul>", "\n", file_list, "</ul>", "\n")#
  }#
  document_pre <- paste(#
    "<!DOCTYPE html>", "\n", #
    "<html>", "\n",#
    "<head>", "\n",#
    "<title> ", basename(path), " </title>", "\n",#
    "<meta charset=", "\"", "utf-8", "\"", ">", "\n",#
    "</head>", "\n", #
    "<body>", "\n", #
    "<ol>", sep = "")#
  document_post <- paste("</ol>", "</body>", "\n", "</html>", sep = "")#
  document_full <- c(document_pre, folder_section, file_section, document_post)#
  cat(document_full, file = paste(path, "/index.html", sep = ""))	#
}
create_index_html("~/Downloads")
