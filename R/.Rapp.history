cor(Duncan[, -c("type")])
cor(Duncan[, -1])
?summary
methods(class="summary.lm")
methods(summary.lm)
?summary.lm
?plot
?plot.fwdlm
library(foward)
install.packages(forward)
install.packages("forward", dependencies=T)
library(foward)
library(forward)
?fwdlm
suppressWarnings(suppressMessages(library(forward)))#
fm1107 <- fwdlm(prestige ~ -1 + education + income, data = Duncan, trace = FALSE)#
summary(fm1107)
fm1107
Duncan[6, ]
Duncan[15, ]
Duncan[16, ]
str(fm1107)
fm1107[["Unit"]]
x<-fm1107[["Unit"]]
str(x)
x<-fm1107[["Unit"]][41:44]
x
fm1107$Unit
fm1107
n = 5;#
slope = -1;#
NP = c(n + 1, 0, n+1, -1);#
adj = 1
n
slope
NP
adj
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)
df0
Points <- matrix(NP, ncol = 2, byrow = FALSE)
Points
Points <- matrix(NP, ncol = 2, byrow = T)
Points
df1 <- as.data.frame(Points)
df2
df1 <- as.data.frame(Points)
df1
df2 <- rbind(df0, df1)
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
Points <- matrix(NP, ncol = 2, byrow = TRUE)#
df1 <- as.data.frame(Points)#
df2 <- rbind(df0, df1)
df2
df1
df0
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
Points <- matrix(NP, ncol = 2, byrow = TRUE)#
df1 <- cbind(Points, GR = 2)#
df2 <- rbind(df0, df1)
df1
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
Points <- matrix(NP, ncol = 2, byrow = TRUE, dimnames = c("XX", "YY"))#
df1 <- cbind(Points, GR = 2)#
df2 <- rbind(df0, df1)
df1
PP <- matrix(NP, ncol = 2, byrow = TRUE)
PP
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))
PP
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2
PP
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2#
colnames(PP) <- c("X", "Y", "GR")#
df2 <- rbind(df0, PP)
df2
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df2 <- rbind(df0, PP)
df2
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 0:max(GR)) {#
	abline(#
	lm(Y ~ X, data = df[1:(n + i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(GR), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df[, "X"]) + adj, las = 1, padj = 0.2)	#
}
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df[1:(n + i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df[, "X"]) + adj, las = 1, padj = 0.2)	#
}
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df[1:(n+i), ]), #
	lty = ifelse(df1[, "GR"] == 1, 1, 1 + i),#
	lwd = ifelse(df1[, "GR"] == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df[, "X"]) + adj, las = 1, padj = 0.2)	#
}
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i), ]), #
	lty = ifelse(df1[, "GR"] == 1, 1, 1 + i),#
	lwd = ifelse(df1[, "GR"] == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df[, "X"]) + adj, las = 1, padj = 0.2)	#
}
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i), ]), #
	lty = ifelse(df1[, "GR"] == 1, 1, 1 + i),#
	lwd = ifelse(df1[, "GR"] == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP=c(2.5, 1))
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP=c(mean(1:5), 1))
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP=c(mean(1:5), 1))
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1)
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP = c(3, 1, 4, 1, 5, 1))
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP = c(3, 1, 4, 1, 5, 1, 6, 1))
c(1, 10, 19)[5]
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19, 20, 21)[GR]#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP = c(3, 1, 4, 1, 5, 1, 6, 1))
?pch
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP = c(3, 1, 4, 1, 5, 1, 6, 1))
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR *2#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP = c(3, 1, 4, 1, 5, 1, 6, 1))
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 0:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n+i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(NP= NULL)
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(NP= NA)
?isna
?is.na
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( ! is.na(NP) ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
NP = c(mean(1:5), 1)
is.na(NP)
! is.na(NP)
length(NP)
length(NA)
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(NP=NA)
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(NP= c(3, 1, 4, 2))
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1 | i == max(df2[, "GR"]), 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
?pch
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = rep(c(1, 10, 19, 5, 9, 23), ceiling(max(GR) / 6))[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1 | i == max(df2[, "GR"]), 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = rep(c(1, 10, 19, 5, 9, 23), ceiling(max(GR) / 6))[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1 | i == max(df2[, "GR"]), 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(NP = c(mean(1:5), -3))
LeverageDiscrepancyInfluence <- function(#
Points = c(mean(1:5), 1), #
n = 5,#
slope = 1, #
adj = 1#
){#
if ( length(Points) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * X, GR = 1)#
df1 <- as.data.frame(matrix(Points, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = rep(c(1, 10, 19, 5, 9, 23), ceiling(max(GR) / 6))[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1 | i == max(df2[, "GR"]), 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}
LeverageDiscrepancyInfluence()
LeverageDiscrepancyInfluence <- function(#
Points = c(mean(1:5), 1), #
n = 5,#
slope = 1, #
adj = 1#
){#
if ( length(Points) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * (1:n), GR = 1)#
df1 <- as.data.frame(matrix(Points, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = rep(c(1, 10, 19, 5, 9, 23), ceiling(max(GR) / 6))[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1 | i == max(df2[, "GR"]), 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}
LeverageDiscrepancyInfluence()
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(expression(mu), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu = .(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(expression(mu) = bquote(mean), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mean), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu = .(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu, = , .(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu, = , .(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu, = , .(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu, = , .(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu == ~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu == ~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean, lty = 2)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean, lty = 2)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean, lty = 2)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + 1.1 * sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean, lty = 2)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean, lty = 2)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 2, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point))), side = 1, adj = (3 + 6 / sd ) /6, padj = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6, padj = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = F, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, xaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = FALSE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = point - mean)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = point)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = point - mean)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, at = point)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot(0,2, arrow=T, point = 3)
Density_Plot(70, 3, arrow=T, point = 78)
Density_Plot(70, 3, arrow=T, point = 76)
Density_Plot(70, 4, arrow=T, point = 76)
Density_Plot(70, 12, arrow=T, point = 76)
Density_Plot(70, 3, arrow=T, point = 76)
Density_Plot(70, 3, arrow=T, point = 76, AX = F)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(70, 3, arrow=T, point = 76, AX = F)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = NULL#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)	#
}#
#
}
Density_Plot(70, 3, arrow=T, point = 76, AX = F)
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), pos = 4)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0.01, label = bquote(mu==~.(mean)), pos = 4)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
?text
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0.01, label = bquote(mu==~.(mean)), adj = [0, 0])#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
?text
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0.01, label = bquote(mu==~.(mean)), adj = c(0, 0))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0.01, label = bquote(mu==~.(mean)), adj = c(0, 1))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(0, 1))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(0, 0))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(0, -0.5))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(0.1, -0.5))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(-0.1, -0.5))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(-0.1, -0.6))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(-0.1, -0.7))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
acqr::Modified_Frequency_Distribution()
X <- c(1, 1, 2, 3, 3, 4, 4, 4, 5, 6)
acqr::Modified_Frequency_Distribution(X)
acqr::Modified_Frequency_Distribution
acqr::Modified_Frequency_Distribution(X, col="black")
# Add alpha to colors#
col2alpha <- function(col, alpha) {#
  col_rgb <- col2rgb(col)/255#
  rgb(col_rgb[1], col_rgb[2], col_rgb[3], alpha = alpha)#
}#
#
### pPower#
pPower <- function (#
  m0 = 0, m1 = 4, sigma = 1, x_range = 5, n = 1, sig = 0.05,#
  H0 = TRUE, H1 = TRUE, body = TRUE, tail = TRUE, beta = TRUE, power = TRUE,#
  reject = TRUE, level = TRUE, AX = TRUE, AZ = FALSE, points = NULL#
)#
{#
  # Calculate critical values#
  sigma_m <- sigma / sqrt(n)#
  d <- (m1 - m0) / sigma#
  # X and Ys#
  X0s <- seq(m0 - x_range * sigma_m, m0 + x_range * sigma_m, by = 0.01 * sigma_m)#
  X1s <- seq(m1 - x_range * sigma_m, m1 + x_range * sigma_m, by = 0.01 * sigma_m)#
  Xs <- sort(cbind(X0s, X1s))#
  Y0s <- dnorm(Xs, mean = m0, sd = sigma_m)#
  Y1s <- dnorm(Xs, mean = m1, sd = sigma_m)#
  # Critical X values#
  X_min <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = TRUE)#
  X_max <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = FALSE)#
  ## Tail#
  low_tail <- seq(min(Xs), X_min, by = sigma_m * 0.001)#
  high_tail <- seq (X_max, max(Xs), by = sigma_m * 0.001)#
  alpha_value <- sub("^0\\.", ".", formatC(sig/2, digits = 2, format = "fg"))#
  alpha_com <- sub("^0\\.", ".", formatC(1 - sig, digits = 2, format = "fg"))#
  beta_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m)#
  beta_value <- formatC(beta_value, digits = 2, format = "fg")#
  beta_value <- sub("^0\\.", ".", beta_value)#
  power_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m, lower.tail = FALSE)#
  power_value <- formatC(power_value, digits = 2, format = "f")#
  power_value <- sub("^0\\.", ".", power_value)#
  boddy <- seq(X_min, X_max, by = sigma_m * 0.001)#
  tail_x <- c(min(low_tail), low_tail, max(low_tail), min(high_tail), high_tail, max(high_tail) )#
  tail_y <- c(0, dnorm(low_tail, mean = m0, sd = sigma_m), 0, 0,#
              dnorm(high_tail, mean = m0, sd = sigma_m), 0)#
  tail_col <- col2alpha("#DC143C", alpha = 0.5)#
  body_x <- c(min(boddy), boddy, max(boddy))#
  body_y <- c(0, dnorm(boddy, mean = m0, sd = sigma_m), 0)#
  body_col <- col2alpha("#D2691E", alpha = 0.5)#
  beta_range <- seq(min(min(X1s), X_max), max(min(X1s), X_max), by = sigma_m * 0.001)#
  beta_x <- c(min(X1s), beta_range, X_max)#
  beta_y <- c(0, dnorm(beta_range, mean = m1, sd = sigma_m), 0)#
  beta_col <- col2alpha("#00008B", alpha = 0.5)#
  power_range <- seq( X_max, max(X1s), by = sigma_m * 0.001)#
  power_x <- c(X_max, power_range, max(X1s))#
  power_y <- c(0, dnorm(power_range, mean = m1, sd = sigma_m), 0)#
  power_col <- col2alpha("#1E90FF", alpha = 0.5)#
  label_pos <- seq(min(Xs), max(Xs), by = sigma_m)#
#
  ## plot#
  plot(NULL, NULL, xlim = range(Xs), # c(60, 105)#
       ylim = c(0, (1 + 0.01) * max(Y0s) ),#
       axes = FALSE, xlab = "", ylab = "", yaxs = "i")#
  # polygons#
  if (tail) {#
    polygon(tail_x, tail_y, col = tail_col, border = "white")#
    if (level){#
      text(x = X_min - sigma_m * 0.5, y = dnorm(m0, m0, sd = sigma_m) / 15,#
           bquote(alpha / 2 == .(alpha_value)), pos = 2)#
    }#
  }#
  if (body) {#
    polygon( body_x, body_y, col = body_col, border = "white")#
    if (level){#
      text(x = m0 - sigma_m * 0.6, y = dnorm(m0, m0, sd = sigma_m) / 2,#
           bquote(1 - alpha == .(alpha_com)), pos = 3)#
    }#
  }#
#
  if (beta) {#
    polygon(beta_x, beta_y, col = beta_col, border = "white")#
    if (level){#
      text(x = X_max - sigma_m * 0.4, y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(beta == .(beta_value)), pos = 2)#
    }#
  }#
  if (power) {#
    polygon(power_x, power_y, col = power_col, border = "white")#
    if (level){#
      text(x = X_max + abs(m1 - X_max) * 0.5,#
           y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(1-beta == .(power_value)), pos = 4)#
    }#
  }#
  # H_0#
#
  if (H0){#
    lines(Xs, Y0s, col = "#cf232a", lwd = 2)#
    abline(v = m0, lwd = 1)#
    arrows(x0 = m0, y0 = dnorm(m0 + sigma_m, m0, sigma_m),#
           x1 = m0 + sigma_m, y1 = dnorm(m0 + sigma_m, m0, sigma_m),#
           length = 0.1)#
    if (AX) sigma_mm <- sigma_m else sigma_mm <- 1#
    text(x = m0 + sigma_m / 2, y = dnorm(m0 + sigma_m, m0, sigma_m), pos = 1,#
         labels = bquote(sigma[M] == .(round(sigma_mm, 2))))#
  }#
  # H_1#
  if (H1){#
    lines(Xs, Y1s, col = "#d5493a", lwd = 2)#
    abline(v = m1, lwd = 1, col = "gray")#
    mtext(expression(H[0]), side = 3, at = m0)#
    mtext(expression(H[1]),  side = 3, at = m1)#
    mtext(text = bquote("Cohen's d" == .(d)~", n"==.(n)), side = 3, at = (m0 + m1) / 2,#
          padj = -2)#
  }#
  ## X-Axes and Z-Axes#
  AXZ <- function (Baseline = 2.5, Axis = "z") {#
    axis(1, at = c(min(label_pos) - 0.5 * sigma_m, max(label_pos) + 0.5 * sigma_m), labels = c("", ""), lwd.ticks = 0, line = baseline)#
    axis(1, at = label_pos, label = rep("", length(label_pos)), lwd = 0, lwd.ticks = 1, line = baseline)#
    axis(1, at = label_pos, label = (label_pos - m0) / sigma_m, lwd = 0, lwd.ticks = 0, line = baseline - 0.5)#
    mtext(text = expression(italic(Axis)), side = 1, adj = 1.03, line = baseline - 0.6)#
  }#
#
  if (AX) {#
    AXZ(0, "X")#
    if (AZ) AXZ(2.5, "z")#
  } else {#
  	AXZ(0, "z")#
  }#
#
  ## Critical lines#
  if(reject){#
    abline(v = X_max, lty = 3)#
    text( x = X_max, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
          label = expression(paste("Reject ", H[0])),  pos = 4)#
    arrows(x0 = X_max, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_max + sigma_m, length = 0.1)#
    abline(v = X_min, lty = 3)#
    text(x = X_min, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
         label = expression(paste("Reject ", H[0])), pos = 2)#
    arrows(x0 = X_min, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_min - sigma_m, length = 0.1)#
  }#
}
pPower()
# Add alpha to colors#
col2alpha <- function(col, alpha) {#
  col_rgb <- col2rgb(col)/255#
  rgb(col_rgb[1], col_rgb[2], col_rgb[3], alpha = alpha)#
}#
#
### pPower#
pPower <- function (#
  m0 = 0, m1 = 4, sigma = 1, x_range = 5, n = 1, sig = 0.05,#
  H0 = TRUE, H1 = TRUE, body = TRUE, tail = TRUE, beta = TRUE, power = TRUE,#
  reject = TRUE, level = TRUE, AX = TRUE, AZ = FALSE, points = NULL#
)#
{#
  # Calculate critical values#
  sigma_m <- sigma / sqrt(n)#
  d <- (m1 - m0) / sigma#
  # X and Ys#
  X0s <- seq(m0 - x_range * sigma_m, m0 + x_range * sigma_m, by = 0.01 * sigma_m)#
  X1s <- seq(m1 - x_range * sigma_m, m1 + x_range * sigma_m, by = 0.01 * sigma_m)#
  Xs <- sort(cbind(X0s, X1s))#
  Y0s <- dnorm(Xs, mean = m0, sd = sigma_m)#
  Y1s <- dnorm(Xs, mean = m1, sd = sigma_m)#
  # Critical X values#
  X_min <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = TRUE)#
  X_max <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = FALSE)#
  ## Tail#
  low_tail <- seq(min(Xs), X_min, by = sigma_m * 0.001)#
  high_tail <- seq (X_max, max(Xs), by = sigma_m * 0.001)#
  alpha_value <- sub("^0\\.", ".", formatC(sig/2, digits = 2, format = "fg"))#
  alpha_com <- sub("^0\\.", ".", formatC(1 - sig, digits = 2, format = "fg"))#
  beta_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m)#
  beta_value <- formatC(beta_value, digits = 2, format = "fg")#
  beta_value <- sub("^0\\.", ".", beta_value)#
  power_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m, lower.tail = FALSE)#
  power_value <- formatC(power_value, digits = 2, format = "f")#
  power_value <- sub("^0\\.", ".", power_value)#
  boddy <- seq(X_min, X_max, by = sigma_m * 0.001)#
  tail_x <- c(min(low_tail), low_tail, max(low_tail), min(high_tail), high_tail, max(high_tail) )#
  tail_y <- c(0, dnorm(low_tail, mean = m0, sd = sigma_m), 0, 0,#
              dnorm(high_tail, mean = m0, sd = sigma_m), 0)#
  tail_col <- col2alpha("#DC143C", alpha = 0.5)#
  body_x <- c(min(boddy), boddy, max(boddy))#
  body_y <- c(0, dnorm(boddy, mean = m0, sd = sigma_m), 0)#
  body_col <- col2alpha("#D2691E", alpha = 0.5)#
  beta_range <- seq(min(min(X1s), X_max), max(min(X1s), X_max), by = sigma_m * 0.001)#
  beta_x <- c(min(X1s), beta_range, X_max)#
  beta_y <- c(0, dnorm(beta_range, mean = m1, sd = sigma_m), 0)#
  beta_col <- col2alpha("#00008B", alpha = 0.5)#
  power_range <- seq( X_max, max(X1s), by = sigma_m * 0.001)#
  power_x <- c(X_max, power_range, max(X1s))#
  power_y <- c(0, dnorm(power_range, mean = m1, sd = sigma_m), 0)#
  power_col <- col2alpha("#1E90FF", alpha = 0.5)#
  label_pos <- seq(min(Xs), max(Xs), by = sigma_m)#
#
  ## plot#
  plot(NULL, NULL, xlim = range(Xs), # c(60, 105)#
       ylim = c(0, (1 + 0.01) * max(Y0s) ),#
       axes = FALSE, xlab = "", ylab = "", yaxs = "i")#
  # polygons#
  if (tail) {#
    polygon(tail_x, tail_y, col = tail_col, border = "white")#
    if (level){#
      text(x = X_min - sigma_m * 0.5, y = dnorm(m0, m0, sd = sigma_m) / 15,#
           bquote(alpha / 2 == .(alpha_value)), pos = 2)#
    }#
  }#
  if (body) {#
    polygon( body_x, body_y, col = body_col, border = "white")#
    if (level){#
      text(x = m0 - sigma_m * 0.6, y = dnorm(m0, m0, sd = sigma_m) / 2,#
           bquote(1 - alpha == .(alpha_com)), pos = 3)#
    }#
  }#
#
  if (beta) {#
    polygon(beta_x, beta_y, col = beta_col, border = "white")#
    if (level){#
      text(x = X_max - sigma_m * 0.4, y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(beta == .(beta_value)), pos = 2)#
    }#
  }#
  if (power) {#
    polygon(power_x, power_y, col = power_col, border = "white")#
    if (level){#
      text(x = X_max + abs(m1 - X_max) * 0.5,#
           y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(1-beta == .(power_value)), pos = 4)#
    }#
  }#
  # H_0#
#
  if (H0){#
    lines(Xs, Y0s, col = "#cf232a", lwd = 2)#
    abline(v = m0, lwd = 1)#
    arrows(x0 = m0, y0 = dnorm(m0 + sigma_m, m0, sigma_m),#
           x1 = m0 + sigma_m, y1 = dnorm(m0 + sigma_m, m0, sigma_m),#
           length = 0.1)#
    if (AX) sigma_mm <- sigma_m else sigma_mm <- 1#
    text(x = m0 + sigma_m / 2, y = dnorm(m0 + sigma_m, m0, sigma_m), pos = 1,#
         labels = bquote(sigma[M] == .(round(sigma_mm, 2))))#
  }#
  # H_1#
  if (H1){#
    lines(Xs, Y1s, col = "#d5493a", lwd = 2)#
    abline(v = m1, lwd = 1, col = "gray")#
    mtext(expression(H[0]), side = 3, at = m0)#
    mtext(expression(H[1]),  side = 3, at = m1)#
    mtext(text = bquote("Cohen's d" == .(d)~", n"==.(n)), side = 3, at = (m0 + m1) / 2,#
          padj = -2)#
  }#
  ## X-Axes and Z-Axes#
  AXZ <- function (Baseline = 2.5, Axis = "z") {#
    axis(1, at = c(min(label_pos) - 0.5 * sigma_m, max(label_pos) + 0.5 * sigma_m), labels = c("", ""), lwd.ticks = 0, line = Baseline)#
    axis(1, at = label_pos, label = rep("", length(label_pos)), lwd = 0, lwd.ticks = 1, line = Baseline)#
    axis(1, at = label_pos, label = (label_pos - m0) / sigma_m, lwd = 0, lwd.ticks = 0, line = Baseline - 0.5)#
    mtext(text = expression(italic(Axis)), side = 1, adj = 1.03, line = Baseline - 0.6)#
  }#
#
  if (AX) {#
    AXZ(0, "X")#
    if (AZ) AXZ(2.5, "z")#
  } else {#
  	AXZ(0, "z")#
  }#
#
  ## Critical lines#
  if(reject){#
    abline(v = X_max, lty = 3)#
    text( x = X_max, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
          label = expression(paste("Reject ", H[0])),  pos = 4)#
    arrows(x0 = X_max, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_max + sigma_m, length = 0.1)#
    abline(v = X_min, lty = 3)#
    text(x = X_min, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
         label = expression(paste("Reject ", H[0])), pos = 2)#
    arrows(x0 = X_min, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_min - sigma_m, length = 0.1)#
  }#
}
pPower()
# Add alpha to colors#
col2alpha <- function(col, alpha) {#
  col_rgb <- col2rgb(col)/255#
  rgb(col_rgb[1], col_rgb[2], col_rgb[3], alpha = alpha)#
}#
#
### pPower#
pPower <- function (#
  m0 = 0, m1 = 4, sigma = 1, x_range = 5, n = 1, sig = 0.05,#
  H0 = TRUE, H1 = TRUE, body = TRUE, tail = TRUE, beta = TRUE, power = TRUE,#
  reject = TRUE, level = TRUE, AX = TRUE, AZ = FALSE, points = NULL#
)#
{#
  # Calculate critical values#
  sigma_m <- sigma / sqrt(n)#
  d <- (m1 - m0) / sigma#
  # X and Ys#
  X0s <- seq(m0 - x_range * sigma_m, m0 + x_range * sigma_m, by = 0.01 * sigma_m)#
  X1s <- seq(m1 - x_range * sigma_m, m1 + x_range * sigma_m, by = 0.01 * sigma_m)#
  Xs <- sort(cbind(X0s, X1s))#
  Y0s <- dnorm(Xs, mean = m0, sd = sigma_m)#
  Y1s <- dnorm(Xs, mean = m1, sd = sigma_m)#
  # Critical X values#
  X_min <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = TRUE)#
  X_max <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = FALSE)#
  ## Tail#
  low_tail <- seq(min(Xs), X_min, by = sigma_m * 0.001)#
  high_tail <- seq (X_max, max(Xs), by = sigma_m * 0.001)#
  alpha_value <- sub("^0\\.", ".", formatC(sig/2, digits = 2, format = "fg"))#
  alpha_com <- sub("^0\\.", ".", formatC(1 - sig, digits = 2, format = "fg"))#
  beta_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m)#
  beta_value <- formatC(beta_value, digits = 2, format = "fg")#
  beta_value <- sub("^0\\.", ".", beta_value)#
  power_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m, lower.tail = FALSE)#
  power_value <- formatC(power_value, digits = 2, format = "f")#
  power_value <- sub("^0\\.", ".", power_value)#
  boddy <- seq(X_min, X_max, by = sigma_m * 0.001)#
  tail_x <- c(min(low_tail), low_tail, max(low_tail), min(high_tail), high_tail, max(high_tail) )#
  tail_y <- c(0, dnorm(low_tail, mean = m0, sd = sigma_m), 0, 0,#
              dnorm(high_tail, mean = m0, sd = sigma_m), 0)#
  tail_col <- col2alpha("#DC143C", alpha = 0.5)#
  body_x <- c(min(boddy), boddy, max(boddy))#
  body_y <- c(0, dnorm(boddy, mean = m0, sd = sigma_m), 0)#
  body_col <- col2alpha("#D2691E", alpha = 0.5)#
  beta_range <- seq(min(min(X1s), X_max), max(min(X1s), X_max), by = sigma_m * 0.001)#
  beta_x <- c(min(X1s), beta_range, X_max)#
  beta_y <- c(0, dnorm(beta_range, mean = m1, sd = sigma_m), 0)#
  beta_col <- col2alpha("#00008B", alpha = 0.5)#
  power_range <- seq( X_max, max(X1s), by = sigma_m * 0.001)#
  power_x <- c(X_max, power_range, max(X1s))#
  power_y <- c(0, dnorm(power_range, mean = m1, sd = sigma_m), 0)#
  power_col <- col2alpha("#1E90FF", alpha = 0.5)#
  label_pos <- seq(min(Xs), max(Xs), by = sigma_m)#
#
  ## plot#
  plot(NULL, NULL, xlim = range(Xs), # c(60, 105)#
       ylim = c(0, (1 + 0.01) * max(Y0s) ),#
       axes = FALSE, xlab = "", ylab = "", yaxs = "i")#
  # polygons#
  if (tail) {#
    polygon(tail_x, tail_y, col = tail_col, border = "white")#
    if (level){#
      text(x = X_min - sigma_m * 0.5, y = dnorm(m0, m0, sd = sigma_m) / 15,#
           bquote(alpha / 2 == .(alpha_value)), pos = 2)#
    }#
  }#
  if (body) {#
    polygon( body_x, body_y, col = body_col, border = "white")#
    if (level){#
      text(x = m0 - sigma_m * 0.6, y = dnorm(m0, m0, sd = sigma_m) / 2,#
           bquote(1 - alpha == .(alpha_com)), pos = 3)#
    }#
  }#
#
  if (beta) {#
    polygon(beta_x, beta_y, col = beta_col, border = "white")#
    if (level){#
      text(x = X_max - sigma_m * 0.4, y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(beta == .(beta_value)), pos = 2)#
    }#
  }#
  if (power) {#
    polygon(power_x, power_y, col = power_col, border = "white")#
    if (level){#
      text(x = X_max + abs(m1 - X_max) * 0.5,#
           y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(1-beta == .(power_value)), pos = 4)#
    }#
  }#
  # H_0#
#
  if (H0){#
    lines(Xs, Y0s, col = "#cf232a", lwd = 2)#
    abline(v = m0, lwd = 1)#
    arrows(x0 = m0, y0 = dnorm(m0 + sigma_m, m0, sigma_m),#
           x1 = m0 + sigma_m, y1 = dnorm(m0 + sigma_m, m0, sigma_m),#
           length = 0.1)#
    if (AX) sigma_mm <- sigma_m else sigma_mm <- 1#
    text(x = m0 + sigma_m / 2, y = dnorm(m0 + sigma_m, m0, sigma_m), pos = 1,#
         labels = bquote(sigma[M] == .(round(sigma_mm, 2))))#
  }#
  # H_1#
  if (H1){#
    lines(Xs, Y1s, col = "#d5493a", lwd = 2)#
    abline(v = m1, lwd = 1, col = "gray")#
    mtext(expression(H[0]), side = 3, at = m0)#
    mtext(expression(H[1]),  side = 3, at = m1)#
    mtext(text = bquote("Cohen's d" == .(d)~", n"==.(n)), side = 3, at = (m0 + m1) / 2,#
          padj = -2)#
  }#
  ## X-Axes and Z-Axes#
  AXZ <- function (Baseline = 2.5, Axis = "z") {#
    axis(1, at = c(min(label_pos) - 0.5 * sigma_m, max(label_pos) + 0.5 * sigma_m), labels = c("", ""), lwd.ticks = 0, line = Baseline)#
    axis(1, at = label_pos, label = rep("", length(label_pos)), lwd = 0, lwd.ticks = 1, line = Baseline)#
    axis(1, at = label_pos, label = (label_pos - m0) / sigma_m, lwd = 0, lwd.ticks = 0, line = Baseline - 0.5)#
    mtext(text = expression(italic(eval(Axis))), side = 1, adj = 1.03, line = Baseline - 0.6)#
  }#
#
  if (AX) {#
    AXZ(0, "X")#
    if (AZ) AXZ(2.5, "z")#
  } else {#
  	AXZ(0, "z")#
  }#
#
  ## Critical lines#
  if(reject){#
    abline(v = X_max, lty = 3)#
    text( x = X_max, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
          label = expression(paste("Reject ", H[0])),  pos = 4)#
    arrows(x0 = X_max, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_max + sigma_m, length = 0.1)#
    abline(v = X_min, lty = 3)#
    text(x = X_min, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
         label = expression(paste("Reject ", H[0])), pos = 2)#
    arrows(x0 = X_min, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_min - sigma_m, length = 0.1)#
  }#
}
pPower()
# Add alpha to colors#
col2alpha <- function(col, alpha) {#
  col_rgb <- col2rgb(col)/255#
  rgb(col_rgb[1], col_rgb[2], col_rgb[3], alpha = alpha)#
}#
#
### pPower#
pPower <- function (#
  m0 = 0, m1 = 4, sigma = 1, x_range = 5, n = 1, sig = 0.05,#
  H0 = TRUE, H1 = TRUE, body = TRUE, tail = TRUE, beta = TRUE, power = TRUE,#
  reject = TRUE, level = TRUE, AX = TRUE, AZ = FALSE, points = NULL#
)#
{#
  # Calculate critical values#
  sigma_m <- sigma / sqrt(n)#
  d <- (m1 - m0) / sigma#
  # X and Ys#
  X0s <- seq(m0 - x_range * sigma_m, m0 + x_range * sigma_m, by = 0.01 * sigma_m)#
  X1s <- seq(m1 - x_range * sigma_m, m1 + x_range * sigma_m, by = 0.01 * sigma_m)#
  Xs <- sort(cbind(X0s, X1s))#
  Y0s <- dnorm(Xs, mean = m0, sd = sigma_m)#
  Y1s <- dnorm(Xs, mean = m1, sd = sigma_m)#
  # Critical X values#
  X_min <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = TRUE)#
  X_max <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = FALSE)#
  ## Tail#
  low_tail <- seq(min(Xs), X_min, by = sigma_m * 0.001)#
  high_tail <- seq (X_max, max(Xs), by = sigma_m * 0.001)#
  alpha_value <- sub("^0\\.", ".", formatC(sig/2, digits = 2, format = "fg"))#
  alpha_com <- sub("^0\\.", ".", formatC(1 - sig, digits = 2, format = "fg"))#
  beta_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m)#
  beta_value <- formatC(beta_value, digits = 2, format = "fg")#
  beta_value <- sub("^0\\.", ".", beta_value)#
  power_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m, lower.tail = FALSE)#
  power_value <- formatC(power_value, digits = 2, format = "f")#
  power_value <- sub("^0\\.", ".", power_value)#
  boddy <- seq(X_min, X_max, by = sigma_m * 0.001)#
  tail_x <- c(min(low_tail), low_tail, max(low_tail), min(high_tail), high_tail, max(high_tail) )#
  tail_y <- c(0, dnorm(low_tail, mean = m0, sd = sigma_m), 0, 0,#
              dnorm(high_tail, mean = m0, sd = sigma_m), 0)#
  tail_col <- col2alpha("#DC143C", alpha = 0.5)#
  body_x <- c(min(boddy), boddy, max(boddy))#
  body_y <- c(0, dnorm(boddy, mean = m0, sd = sigma_m), 0)#
  body_col <- col2alpha("#D2691E", alpha = 0.5)#
  beta_range <- seq(min(min(X1s), X_max), max(min(X1s), X_max), by = sigma_m * 0.001)#
  beta_x <- c(min(X1s), beta_range, X_max)#
  beta_y <- c(0, dnorm(beta_range, mean = m1, sd = sigma_m), 0)#
  beta_col <- col2alpha("#00008B", alpha = 0.5)#
  power_range <- seq( X_max, max(X1s), by = sigma_m * 0.001)#
  power_x <- c(X_max, power_range, max(X1s))#
  power_y <- c(0, dnorm(power_range, mean = m1, sd = sigma_m), 0)#
  power_col <- col2alpha("#1E90FF", alpha = 0.5)#
  label_pos <- seq(min(Xs), max(Xs), by = sigma_m)#
#
  ## plot#
  plot(NULL, NULL, xlim = range(Xs), # c(60, 105)#
       ylim = c(0, (1 + 0.01) * max(Y0s) ),#
       axes = FALSE, xlab = "", ylab = "", yaxs = "i")#
  # polygons#
  if (tail) {#
    polygon(tail_x, tail_y, col = tail_col, border = "white")#
    if (level){#
      text(x = X_min - sigma_m * 0.5, y = dnorm(m0, m0, sd = sigma_m) / 15,#
           bquote(alpha / 2 == .(alpha_value)), pos = 2)#
    }#
  }#
  if (body) {#
    polygon( body_x, body_y, col = body_col, border = "white")#
    if (level){#
      text(x = m0 - sigma_m * 0.6, y = dnorm(m0, m0, sd = sigma_m) / 2,#
           bquote(1 - alpha == .(alpha_com)), pos = 3)#
    }#
  }#
#
  if (beta) {#
    polygon(beta_x, beta_y, col = beta_col, border = "white")#
    if (level){#
      text(x = X_max - sigma_m * 0.4, y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(beta == .(beta_value)), pos = 2)#
    }#
  }#
  if (power) {#
    polygon(power_x, power_y, col = power_col, border = "white")#
    if (level){#
      text(x = X_max + abs(m1 - X_max) * 0.5,#
           y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(1-beta == .(power_value)), pos = 4)#
    }#
  }#
  # H_0#
#
  if (H0){#
    lines(Xs, Y0s, col = "#cf232a", lwd = 2)#
    abline(v = m0, lwd = 1)#
    arrows(x0 = m0, y0 = dnorm(m0 + sigma_m, m0, sigma_m),#
           x1 = m0 + sigma_m, y1 = dnorm(m0 + sigma_m, m0, sigma_m),#
           length = 0.1)#
    if (AX) sigma_mm <- sigma_m else sigma_mm <- 1#
    text(x = m0 + sigma_m / 2, y = dnorm(m0 + sigma_m, m0, sigma_m), pos = 1,#
         labels = bquote(sigma[M] == .(round(sigma_mm, 2))))#
  }#
  # H_1#
  if (H1){#
    lines(Xs, Y1s, col = "#d5493a", lwd = 2)#
    abline(v = m1, lwd = 1, col = "gray")#
    mtext(expression(H[0]), side = 3, at = m0)#
    mtext(expression(H[1]),  side = 3, at = m1)#
    mtext(text = bquote("Cohen's d" == .(d)~", n"==.(n)), side = 3, at = (m0 + m1) / 2,#
          padj = -2)#
  }#
  ## X-Axes and Z-Axes#
  AXZ <- function (Baseline = 2.5, Axis = "z") {#
    axis(1, at = c(min(label_pos) - 0.5 * sigma_m, max(label_pos) + 0.5 * sigma_m), labels = c("", ""), lwd.ticks = 0, line = Baseline)#
    axis(1, at = label_pos, label = rep("", length(label_pos)), lwd = 0, lwd.ticks = 1, line = Baseline)#
    axis(1, at = label_pos, label = (label_pos - m0) / sigma_m, lwd = 0, lwd.ticks = 0, line = Baseline - 0.5)#
    mtext(text = bquote(italic(.(Axis))), side = 1, adj = 1.03, line = Baseline - 0.6)#
  }#
#
  if (AX) {#
    AXZ(0, "X")#
    if (AZ) AXZ(2.5, "z")#
  } else {#
  	AXZ(0, "z")#
  }#
#
  ## Critical lines#
  if(reject){#
    abline(v = X_max, lty = 3)#
    text( x = X_max, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
          label = expression(paste("Reject ", H[0])),  pos = 4)#
    arrows(x0 = X_max, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_max + sigma_m, length = 0.1)#
    abline(v = X_min, lty = 3)#
    text(x = X_min, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
         label = expression(paste("Reject ", H[0])), pos = 2)#
    arrows(x0 = X_min, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_min - sigma_m, length = 0.1)#
  }#
}
pPower()
pPower(AZ=T)
# Add alpha to colors#
col2alpha <- function(col, alpha) {#
  col_rgb <- col2rgb(col)/255#
  rgb(col_rgb[1], col_rgb[2], col_rgb[3], alpha = alpha)#
}#
#
### pPower#
pPower <- function (#
  m0 = 0, m1 = 4, sigma = 1, x_range = 5, n = 1, sig = 0.05,#
  H0 = TRUE, H1 = TRUE, body = TRUE, tail = TRUE, beta = TRUE, power = TRUE,#
  reject = TRUE, level = TRUE, AX = TRUE, AZ = FALSE, points = 0.5#
)#
{#
  # Calculate critical values#
  sigma_m <- sigma / sqrt(n)#
  d <- (m1 - m0) / sigma#
  # X and Ys#
  X0s <- seq(m0 - x_range * sigma_m, m0 + x_range * sigma_m, by = 0.01 * sigma_m)#
  X1s <- seq(m1 - x_range * sigma_m, m1 + x_range * sigma_m, by = 0.01 * sigma_m)#
  Xs <- sort(cbind(X0s, X1s))#
  Y0s <- dnorm(Xs, mean = m0, sd = sigma_m)#
  Y1s <- dnorm(Xs, mean = m1, sd = sigma_m)#
  # Critical X values#
  X_min <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = TRUE)#
  X_max <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = FALSE)#
  ## Tail#
  low_tail <- seq(min(Xs), X_min, by = sigma_m * 0.001)#
  high_tail <- seq (X_max, max(Xs), by = sigma_m * 0.001)#
  alpha_value <- sub("^0\\.", ".", formatC(sig/2, digits = 2, format = "fg"))#
  alpha_com <- sub("^0\\.", ".", formatC(1 - sig, digits = 2, format = "fg"))#
  beta_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m)#
  beta_value <- formatC(beta_value, digits = 2, format = "fg")#
  beta_value <- sub("^0\\.", ".", beta_value)#
  power_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m, lower.tail = FALSE)#
  power_value <- formatC(power_value, digits = 2, format = "f")#
  power_value <- sub("^0\\.", ".", power_value)#
  boddy <- seq(X_min, X_max, by = sigma_m * 0.001)#
  tail_x <- c(min(low_tail), low_tail, max(low_tail), min(high_tail), high_tail, max(high_tail) )#
  tail_y <- c(0, dnorm(low_tail, mean = m0, sd = sigma_m), 0, 0,#
              dnorm(high_tail, mean = m0, sd = sigma_m), 0)#
  tail_col <- col2alpha("#DC143C", alpha = 0.5)#
  body_x <- c(min(boddy), boddy, max(boddy))#
  body_y <- c(0, dnorm(boddy, mean = m0, sd = sigma_m), 0)#
  body_col <- col2alpha("#D2691E", alpha = 0.5)#
  beta_range <- seq(min(min(X1s), X_max), max(min(X1s), X_max), by = sigma_m * 0.001)#
  beta_x <- c(min(X1s), beta_range, X_max)#
  beta_y <- c(0, dnorm(beta_range, mean = m1, sd = sigma_m), 0)#
  beta_col <- col2alpha("#00008B", alpha = 0.5)#
  power_range <- seq( X_max, max(X1s), by = sigma_m * 0.001)#
  power_x <- c(X_max, power_range, max(X1s))#
  power_y <- c(0, dnorm(power_range, mean = m1, sd = sigma_m), 0)#
  power_col <- col2alpha("#1E90FF", alpha = 0.5)#
  label_pos <- seq(min(Xs), max(Xs), by = sigma_m)#
  label_pos <- cbind(label_pos, points)#
#
  ## plot#
  plot(NULL, NULL, xlim = range(Xs), # c(60, 105)#
       ylim = c(0, (1 + 0.01) * max(Y0s) ),#
       axes = FALSE, xlab = "", ylab = "", yaxs = "i")#
  # polygons#
  if (tail) {#
    polygon(tail_x, tail_y, col = tail_col, border = "white")#
    if (level){#
      text(x = X_min - sigma_m * 0.5, y = dnorm(m0, m0, sd = sigma_m) / 15,#
           bquote(alpha / 2 == .(alpha_value)), pos = 2)#
    }#
  }#
  if (body) {#
    polygon( body_x, body_y, col = body_col, border = "white")#
    if (level){#
      text(x = m0 - sigma_m * 0.6, y = dnorm(m0, m0, sd = sigma_m) / 2,#
           bquote(1 - alpha == .(alpha_com)), pos = 3)#
    }#
  }#
#
  if (beta) {#
    polygon(beta_x, beta_y, col = beta_col, border = "white")#
    if (level){#
      text(x = X_max - sigma_m * 0.4, y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(beta == .(beta_value)), pos = 2)#
    }#
  }#
  if (power) {#
    polygon(power_x, power_y, col = power_col, border = "white")#
    if (level){#
      text(x = X_max + abs(m1 - X_max) * 0.5,#
           y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(1-beta == .(power_value)), pos = 4)#
    }#
  }#
  # H_0#
#
  if (H0){#
    lines(Xs, Y0s, col = "#cf232a", lwd = 2)#
    abline(v = m0, lwd = 1)#
    arrows(x0 = m0, y0 = dnorm(m0 + sigma_m, m0, sigma_m),#
           x1 = m0 + sigma_m, y1 = dnorm(m0 + sigma_m, m0, sigma_m),#
           length = 0.1)#
    if (AX) sigma_mm <- sigma_m else sigma_mm <- 1#
    text(x = m0 + sigma_m / 2, y = dnorm(m0 + sigma_m, m0, sigma_m), pos = 1,#
         labels = bquote(sigma[M] == .(round(sigma_mm, 2))))#
  }#
  # H_1#
  if (H1){#
    lines(Xs, Y1s, col = "#d5493a", lwd = 2)#
    abline(v = m1, lwd = 1, col = "gray")#
    mtext(expression(H[0]), side = 3, at = m0)#
    mtext(expression(H[1]),  side = 3, at = m1)#
    mtext(text = bquote("Cohen's d" == .(d)~", n"==.(n)), side = 3, at = (m0 + m1) / 2,#
          padj = -2)#
  }#
  ## X-Axes and Z-Axes#
  AXZ <- function (Baseline = 2.5, Axis = "z") {#
    axis(1, at = c(min(label_pos) - 0.5 * sigma_m, max(label_pos) + 0.5 * sigma_m), labels = c("", ""), lwd.ticks = 0, line = Baseline)#
    axis(1, at = label_pos, label = rep("", length(label_pos)), lwd = 0, lwd.ticks = 1, line = Baseline)#
    axis(1, at = label_pos, label = (label_pos - m0) / sigma_m, lwd = 0, lwd.ticks = 0, line = Baseline - 0.5)#
    mtext(text = bquote(italic(.(Axis))), side = 1, adj = 1.03, line = Baseline - 0.6)#
  }#
#
  if (AX) {#
    AXZ(0, "X")#
    if (AZ) AXZ(2.5, "z")#
  } else {#
  	AXZ(0, "z")#
  }#
#
  ## Critical lines#
  if(reject){#
    abline(v = X_max, lty = 3)#
    text( x = X_max, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
          label = expression(paste("Reject ", H[0])),  pos = 4)#
    arrows(x0 = X_max, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_max + sigma_m, length = 0.1)#
    abline(v = X_min, lty = 3)#
    text(x = X_min, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
         label = expression(paste("Reject ", H[0])), pos = 2)#
    arrows(x0 = X_min, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_min - sigma_m, length = 0.1)#
  }#
}
pPower(AZ=T)
# Add alpha to colors#
col2alpha <- function(col, alpha) {#
  col_rgb <- col2rgb(col)/255#
  rgb(col_rgb[1], col_rgb[2], col_rgb[3], alpha = alpha)#
}#
#
### pPower#
pPower <- function (#
  m0 = 0, m1 = 4, sigma = 1, x_range = 5, n = 1, sig = 0.05,#
  H0 = TRUE, H1 = TRUE, body = TRUE, tail = TRUE, beta = TRUE, power = TRUE,#
  reject = TRUE, level = TRUE, AX = TRUE, AZ = FALSE, points = 1#
)#
{#
  # Calculate critical values#
  sigma_m <- sigma / sqrt(n)#
  d <- (m1 - m0) / sigma#
  # X and Ys#
  X0s <- seq(m0 - x_range * sigma_m, m0 + x_range * sigma_m, by = 0.01 * sigma_m)#
  X1s <- seq(m1 - x_range * sigma_m, m1 + x_range * sigma_m, by = 0.01 * sigma_m)#
  Xs <- sort(cbind(X0s, X1s))#
  Y0s <- dnorm(Xs, mean = m0, sd = sigma_m)#
  Y1s <- dnorm(Xs, mean = m1, sd = sigma_m)#
  # Critical X values#
  X_min <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = TRUE)#
  X_max <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = FALSE)#
  ## Tail#
  low_tail <- seq(min(Xs), X_min, by = sigma_m * 0.001)#
  high_tail <- seq (X_max, max(Xs), by = sigma_m * 0.001)#
  alpha_value <- sub("^0\\.", ".", formatC(sig/2, digits = 2, format = "fg"))#
  alpha_com <- sub("^0\\.", ".", formatC(1 - sig, digits = 2, format = "fg"))#
  beta_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m)#
  beta_value <- formatC(beta_value, digits = 2, format = "fg")#
  beta_value <- sub("^0\\.", ".", beta_value)#
  power_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m, lower.tail = FALSE)#
  power_value <- formatC(power_value, digits = 2, format = "f")#
  power_value <- sub("^0\\.", ".", power_value)#
  boddy <- seq(X_min, X_max, by = sigma_m * 0.001)#
  tail_x <- c(min(low_tail), low_tail, max(low_tail), min(high_tail), high_tail, max(high_tail) )#
  tail_y <- c(0, dnorm(low_tail, mean = m0, sd = sigma_m), 0, 0,#
              dnorm(high_tail, mean = m0, sd = sigma_m), 0)#
  tail_col <- col2alpha("#DC143C", alpha = 0.5)#
  body_x <- c(min(boddy), boddy, max(boddy))#
  body_y <- c(0, dnorm(boddy, mean = m0, sd = sigma_m), 0)#
  body_col <- col2alpha("#D2691E", alpha = 0.5)#
  beta_range <- seq(min(min(X1s), X_max), max(min(X1s), X_max), by = sigma_m * 0.001)#
  beta_x <- c(min(X1s), beta_range, X_max)#
  beta_y <- c(0, dnorm(beta_range, mean = m1, sd = sigma_m), 0)#
  beta_col <- col2alpha("#00008B", alpha = 0.5)#
  power_range <- seq( X_max, max(X1s), by = sigma_m * 0.001)#
  power_x <- c(X_max, power_range, max(X1s))#
  power_y <- c(0, dnorm(power_range, mean = m1, sd = sigma_m), 0)#
  power_col <- col2alpha("#1E90FF", alpha = 0.5)#
  label_pos <- seq(min(Xs), max(Xs), by = sigma_m)#
  label_pos <- cbind(label_pos, points)#
#
  ## plot#
  plot(NULL, NULL, xlim = range(Xs), # c(60, 105)#
       ylim = c(0, (1 + 0.01) * max(Y0s) ),#
       axes = FALSE, xlab = "", ylab = "", yaxs = "i")#
  # polygons#
  if (tail) {#
    polygon(tail_x, tail_y, col = tail_col, border = "white")#
    if (level){#
      text(x = X_min - sigma_m * 0.5, y = dnorm(m0, m0, sd = sigma_m) / 15,#
           bquote(alpha / 2 == .(alpha_value)), pos = 2)#
    }#
  }#
  if (body) {#
    polygon( body_x, body_y, col = body_col, border = "white")#
    if (level){#
      text(x = m0 - sigma_m * 0.6, y = dnorm(m0, m0, sd = sigma_m) / 2,#
           bquote(1 - alpha == .(alpha_com)), pos = 3)#
    }#
  }#
#
  if (beta) {#
    polygon(beta_x, beta_y, col = beta_col, border = "white")#
    if (level){#
      text(x = X_max - sigma_m * 0.4, y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(beta == .(beta_value)), pos = 2)#
    }#
  }#
  if (power) {#
    polygon(power_x, power_y, col = power_col, border = "white")#
    if (level){#
      text(x = X_max + abs(m1 - X_max) * 0.5,#
           y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(1-beta == .(power_value)), pos = 4)#
    }#
  }#
  # H_0#
#
  if (H0){#
    lines(Xs, Y0s, col = "#cf232a", lwd = 2)#
    abline(v = m0, lwd = 1)#
    arrows(x0 = m0, y0 = dnorm(m0 + sigma_m, m0, sigma_m),#
           x1 = m0 + sigma_m, y1 = dnorm(m0 + sigma_m, m0, sigma_m),#
           length = 0.1)#
    if (AX) sigma_mm <- sigma_m else sigma_mm <- 1#
    text(x = m0 + sigma_m / 2, y = dnorm(m0 + sigma_m, m0, sigma_m), pos = 1,#
         labels = bquote(sigma[M] == .(round(sigma_mm, 2))))#
  }#
  # H_1#
  if (H1){#
    lines(Xs, Y1s, col = "#d5493a", lwd = 2)#
    abline(v = m1, lwd = 1, col = "gray")#
    mtext(expression(H[0]), side = 3, at = m0)#
    mtext(expression(H[1]),  side = 3, at = m1)#
    mtext(text = bquote("Cohen's d" == .(d)~", n"==.(n)), side = 3, at = (m0 + m1) / 2,#
          padj = -2)#
  }#
  ## X-Axes and Z-Axes#
  AXZ <- function (Baseline = 2.5, Axis = "z") {#
    axis(1, at = c(min(label_pos) - 0.5 * sigma_m, max(label_pos) + 0.5 * sigma_m), labels = c("", ""), lwd.ticks = 0, line = Baseline)#
    axis(1, at = label_pos, label = rep("", length(label_pos)), lwd = 0, lwd.ticks = 1, line = Baseline)#
    axis(1, at = label_pos, label = (label_pos - m0) / sigma_m, lwd = 0, lwd.ticks = 0, line = Baseline - 0.5)#
    mtext(text = bquote(italic(.(Axis))), side = 1, adj = 1.03, line = Baseline - 0.6)#
  }#
#
  if (AX) {#
    AXZ(0, "X")#
    if (AZ) AXZ(2.5, "z")#
  } else {#
  	AXZ(0, "z")#
  }#
#
  ## Critical lines#
  if(reject){#
    abline(v = X_max, lty = 3)#
    text( x = X_max, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
          label = expression(paste("Reject ", H[0])),  pos = 4)#
    arrows(x0 = X_max, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_max + sigma_m, length = 0.1)#
    abline(v = X_min, lty = 3)#
    text(x = X_min, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
         label = expression(paste("Reject ", H[0])), pos = 2)#
    arrows(x0 = X_min, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_min - sigma_m, length = 0.1)#
  }#
}
pPower(AZ=T)
# Add alpha to colors#
col2alpha <- function(col, alpha) {#
  col_rgb <- col2rgb(col)/255#
  rgb(col_rgb[1], col_rgb[2], col_rgb[3], alpha = alpha)#
}#
#
### pPower#
pPower <- function (#
  m0 = 0, m1 = 4, sigma = 1, x_range = 5, n = 1, sig = 0.05,#
  H0 = TRUE, H1 = TRUE, body = TRUE, tail = TRUE, beta = TRUE, power = TRUE,#
  reject = TRUE, level = TRUE, AX = TRUE, AZ = FALSE, points = 0.5#
)#
{#
  # Calculate critical values#
  sigma_m <- sigma / sqrt(n)#
  d <- (m1 - m0) / sigma#
  # X and Ys#
  X0s <- seq(m0 - x_range * sigma_m, m0 + x_range * sigma_m, by = 0.01 * sigma_m)#
  X1s <- seq(m1 - x_range * sigma_m, m1 + x_range * sigma_m, by = 0.01 * sigma_m)#
  Xs <- sort(cbind(X0s, X1s))#
  Y0s <- dnorm(Xs, mean = m0, sd = sigma_m)#
  Y1s <- dnorm(Xs, mean = m1, sd = sigma_m)#
  # Critical X values#
  X_min <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = TRUE)#
  X_max <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = FALSE)#
  ## Tail#
  low_tail <- seq(min(Xs), X_min, by = sigma_m * 0.001)#
  high_tail <- seq (X_max, max(Xs), by = sigma_m * 0.001)#
  alpha_value <- sub("^0\\.", ".", formatC(sig/2, digits = 2, format = "fg"))#
  alpha_com <- sub("^0\\.", ".", formatC(1 - sig, digits = 2, format = "fg"))#
  beta_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m)#
  beta_value <- formatC(beta_value, digits = 2, format = "fg")#
  beta_value <- sub("^0\\.", ".", beta_value)#
  power_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m, lower.tail = FALSE)#
  power_value <- formatC(power_value, digits = 2, format = "f")#
  power_value <- sub("^0\\.", ".", power_value)#
  boddy <- seq(X_min, X_max, by = sigma_m * 0.001)#
  tail_x <- c(min(low_tail), low_tail, max(low_tail), min(high_tail), high_tail, max(high_tail) )#
  tail_y <- c(0, dnorm(low_tail, mean = m0, sd = sigma_m), 0, 0,#
              dnorm(high_tail, mean = m0, sd = sigma_m), 0)#
  tail_col <- col2alpha("#DC143C", alpha = 0.5)#
  body_x <- c(min(boddy), boddy, max(boddy))#
  body_y <- c(0, dnorm(boddy, mean = m0, sd = sigma_m), 0)#
  body_col <- col2alpha("#D2691E", alpha = 0.5)#
  beta_range <- seq(min(min(X1s), X_max), max(min(X1s), X_max), by = sigma_m * 0.001)#
  beta_x <- c(min(X1s), beta_range, X_max)#
  beta_y <- c(0, dnorm(beta_range, mean = m1, sd = sigma_m), 0)#
  beta_col <- col2alpha("#00008B", alpha = 0.5)#
  power_range <- seq( X_max, max(X1s), by = sigma_m * 0.001)#
  power_x <- c(X_max, power_range, max(X1s))#
  power_y <- c(0, dnorm(power_range, mean = m1, sd = sigma_m), 0)#
  power_col <- col2alpha("#1E90FF", alpha = 0.5)#
  label_pos <- seq(min(Xs), max(Xs), by = sigma_m)#
  label_pos <- unique(cbind(label_pos, points))#
#
  ## plot#
  plot(NULL, NULL, xlim = range(Xs), # c(60, 105)#
       ylim = c(0, (1 + 0.01) * max(Y0s) ),#
       axes = FALSE, xlab = "", ylab = "", yaxs = "i")#
  # polygons#
  if (tail) {#
    polygon(tail_x, tail_y, col = tail_col, border = "white")#
    if (level){#
      text(x = X_min - sigma_m * 0.5, y = dnorm(m0, m0, sd = sigma_m) / 15,#
           bquote(alpha / 2 == .(alpha_value)), pos = 2)#
    }#
  }#
  if (body) {#
    polygon( body_x, body_y, col = body_col, border = "white")#
    if (level){#
      text(x = m0 - sigma_m * 0.6, y = dnorm(m0, m0, sd = sigma_m) / 2,#
           bquote(1 - alpha == .(alpha_com)), pos = 3)#
    }#
  }#
#
  if (beta) {#
    polygon(beta_x, beta_y, col = beta_col, border = "white")#
    if (level){#
      text(x = X_max - sigma_m * 0.4, y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(beta == .(beta_value)), pos = 2)#
    }#
  }#
  if (power) {#
    polygon(power_x, power_y, col = power_col, border = "white")#
    if (level){#
      text(x = X_max + abs(m1 - X_max) * 0.5,#
           y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(1-beta == .(power_value)), pos = 4)#
    }#
  }#
  # H_0#
#
  if (H0){#
    lines(Xs, Y0s, col = "#cf232a", lwd = 2)#
    abline(v = m0, lwd = 1)#
    arrows(x0 = m0, y0 = dnorm(m0 + sigma_m, m0, sigma_m),#
           x1 = m0 + sigma_m, y1 = dnorm(m0 + sigma_m, m0, sigma_m),#
           length = 0.1)#
    if (AX) sigma_mm <- sigma_m else sigma_mm <- 1#
    text(x = m0 + sigma_m / 2, y = dnorm(m0 + sigma_m, m0, sigma_m), pos = 1,#
         labels = bquote(sigma[M] == .(round(sigma_mm, 2))))#
  }#
  # H_1#
  if (H1){#
    lines(Xs, Y1s, col = "#d5493a", lwd = 2)#
    abline(v = m1, lwd = 1, col = "gray")#
    mtext(expression(H[0]), side = 3, at = m0)#
    mtext(expression(H[1]),  side = 3, at = m1)#
    mtext(text = bquote("Cohen's d" == .(d)~", n"==.(n)), side = 3, at = (m0 + m1) / 2,#
          padj = -2)#
  }#
  ## X-Axes and Z-Axes#
  AXZ <- function (Baseline = 2.5, Axis = "z") {#
    axis(1, at = c(min(label_pos) - 0.5 * sigma_m, max(label_pos) + 0.5 * sigma_m), labels = c("", ""), lwd.ticks = 0, line = Baseline)#
    axis(1, at = label_pos, label = rep("", length(label_pos)), lwd = 0, lwd.ticks = 1, line = Baseline)#
    axis(1, at = label_pos, label = (label_pos - m0) / sigma_m, lwd = 0, lwd.ticks = 0, line = Baseline - 0.5)#
    mtext(text = bquote(italic(.(Axis))), side = 1, adj = 1.03, line = Baseline - 0.6)#
  }#
#
  if (AX) {#
    AXZ(0, "X")#
    if (AZ) AXZ(2.5, "z")#
  } else {#
  	AXZ(0, "z")#
  }#
#
  ## Critical lines#
  if(reject){#
    abline(v = X_max, lty = 3)#
    text( x = X_max, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
          label = expression(paste("Reject ", H[0])),  pos = 4)#
    arrows(x0 = X_max, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_max + sigma_m, length = 0.1)#
    abline(v = X_min, lty = 3)#
    text(x = X_min, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
         label = expression(paste("Reject ", H[0])), pos = 2)#
    arrows(x0 = X_min, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_min - sigma_m, length = 0.1)#
  }#
}
# Add alpha to colors#
col2alpha <- function(col, alpha) {#
  col_rgb <- col2rgb(col)/255#
  rgb(col_rgb[1], col_rgb[2], col_rgb[3], alpha = alpha)#
}#
#
### pPower#
pPower <- function (#
  m0 = 0, m1 = 4, sigma = 1, x_range = 5, n = 1, sig = 0.05,#
  H0 = TRUE, H1 = TRUE, body = TRUE, tail = TRUE, beta = TRUE, power = TRUE,#
  reject = TRUE, level = TRUE, AX = TRUE, AZ = FALSE, points = 0.5#
)#
{#
  # Calculate critical values#
  sigma_m <- sigma / sqrt(n)#
  d <- (m1 - m0) / sigma#
  # X and Ys#
  X0s <- seq(m0 - x_range * sigma_m, m0 + x_range * sigma_m, by = 0.01 * sigma_m)#
  X1s <- seq(m1 - x_range * sigma_m, m1 + x_range * sigma_m, by = 0.01 * sigma_m)#
  Xs <- sort(cbind(X0s, X1s))#
  Y0s <- dnorm(Xs, mean = m0, sd = sigma_m)#
  Y1s <- dnorm(Xs, mean = m1, sd = sigma_m)#
  # Critical X values#
  X_min <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = TRUE)#
  X_max <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = FALSE)#
  ## Tail#
  low_tail <- seq(min(Xs), X_min, by = sigma_m * 0.001)#
  high_tail <- seq (X_max, max(Xs), by = sigma_m * 0.001)#
  alpha_value <- sub("^0\\.", ".", formatC(sig/2, digits = 2, format = "fg"))#
  alpha_com <- sub("^0\\.", ".", formatC(1 - sig, digits = 2, format = "fg"))#
  beta_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m)#
  beta_value <- formatC(beta_value, digits = 2, format = "fg")#
  beta_value <- sub("^0\\.", ".", beta_value)#
  power_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m, lower.tail = FALSE)#
  power_value <- formatC(power_value, digits = 2, format = "f")#
  power_value <- sub("^0\\.", ".", power_value)#
  boddy <- seq(X_min, X_max, by = sigma_m * 0.001)#
  tail_x <- c(min(low_tail), low_tail, max(low_tail), min(high_tail), high_tail, max(high_tail) )#
  tail_y <- c(0, dnorm(low_tail, mean = m0, sd = sigma_m), 0, 0,#
              dnorm(high_tail, mean = m0, sd = sigma_m), 0)#
  tail_col <- col2alpha("#DC143C", alpha = 0.5)#
  body_x <- c(min(boddy), boddy, max(boddy))#
  body_y <- c(0, dnorm(boddy, mean = m0, sd = sigma_m), 0)#
  body_col <- col2alpha("#D2691E", alpha = 0.5)#
  beta_range <- seq(min(min(X1s), X_max), max(min(X1s), X_max), by = sigma_m * 0.001)#
  beta_x <- c(min(X1s), beta_range, X_max)#
  beta_y <- c(0, dnorm(beta_range, mean = m1, sd = sigma_m), 0)#
  beta_col <- col2alpha("#00008B", alpha = 0.5)#
  power_range <- seq( X_max, max(X1s), by = sigma_m * 0.001)#
  power_x <- c(X_max, power_range, max(X1s))#
  power_y <- c(0, dnorm(power_range, mean = m1, sd = sigma_m), 0)#
  power_col <- col2alpha("#1E90FF", alpha = 0.5)#
  label_pos <- seq(min(Xs), max(Xs), by = sigma_m)#
  label_pos <- unique(cbind(label_pos, points))#
#
  ## plot#
  plot(NULL, NULL, xlim = range(Xs), # c(60, 105)#
       ylim = c(0, (1 + 0.01) * max(Y0s) ),#
       axes = FALSE, xlab = "", ylab = "", yaxs = "i")#
  # polygons#
  if (tail) {#
    polygon(tail_x, tail_y, col = tail_col, border = "white")#
    if (level){#
      text(x = X_min - sigma_m * 0.5, y = dnorm(m0, m0, sd = sigma_m) / 15,#
           bquote(alpha / 2 == .(alpha_value)), pos = 2)#
    }#
  }#
  if (body) {#
    polygon( body_x, body_y, col = body_col, border = "white")#
    if (level){#
      text(x = m0 - sigma_m * 0.6, y = dnorm(m0, m0, sd = sigma_m) / 2,#
           bquote(1 - alpha == .(alpha_com)), pos = 3)#
    }#
  }#
#
  if (beta) {#
    polygon(beta_x, beta_y, col = beta_col, border = "white")#
    if (level){#
      text(x = X_max - sigma_m * 0.4, y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(beta == .(beta_value)), pos = 2)#
    }#
  }#
  if (power) {#
    polygon(power_x, power_y, col = power_col, border = "white")#
    if (level){#
      text(x = X_max + abs(m1 - X_max) * 0.5,#
           y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(1-beta == .(power_value)), pos = 4)#
    }#
  }#
  # H_0#
#
  if (H0){#
    lines(Xs, Y0s, col = "#cf232a", lwd = 2)#
    abline(v = m0, lwd = 1)#
    arrows(x0 = m0, y0 = dnorm(m0 + sigma_m, m0, sigma_m),#
           x1 = m0 + sigma_m, y1 = dnorm(m0 + sigma_m, m0, sigma_m),#
           length = 0.1)#
    if (AX) sigma_mm <- sigma_m else sigma_mm <- 1#
    text(x = m0 + sigma_m / 2, y = dnorm(m0 + sigma_m, m0, sigma_m), pos = 1,#
         labels = bquote(sigma[M] == .(round(sigma_mm, 2))))#
  }#
  # H_1#
  if (H1){#
    lines(Xs, Y1s, col = "#d5493a", lwd = 2)#
    abline(v = m1, lwd = 1, col = "gray")#
    mtext(expression(H[0]), side = 3, at = m0)#
    mtext(expression(H[1]),  side = 3, at = m1)#
    mtext(text = bquote("Cohen's d" == .(d)~", n"==.(n)), side = 3, at = (m0 + m1) / 2,#
          padj = -2)#
  }#
  ## X-Axes and Z-Axes#
  AXZ <- function (Baseline = 2.5, Axis = "z") {#
    axis(1, at = c(min(label_pos) - 0.5 * sigma_m, max(label_pos) + 0.5 * sigma_m), labels = c("", ""), lwd.ticks = 0, line = Baseline)#
    axis(1, at = label_pos, label = rep("", length(label_pos)), lwd = 0, lwd.ticks = 1, line = Baseline)#
    axis(1, at = label_pos, label = (label_pos - m0) / sigma_m, lwd = 0, lwd.ticks = 0, line = Baseline - 0.5)#
    mtext(text = bquote(italic(.(Axis))), side = 1, adj = 1.03, line = Baseline - 0.6)#
  }#
#
  if (AX) {#
    AXZ(0, "X")#
    if (AZ) AXZ(2.5, "z")#
  } else {#
  	AXZ(0, "z")#
  }#
#
  ## Critical lines#
  if(reject){#
    abline(v = X_max, lty = 3)#
    text( x = X_max, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
          label = expression(paste("Reject ", H[0])),  pos = 4)#
    arrows(x0 = X_max, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_max + sigma_m, length = 0.1)#
    abline(v = X_min, lty = 3)#
    text(x = X_min, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
         label = expression(paste("Reject ", H[0])), pos = 2)#
    arrows(x0 = X_min, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_min - sigma_m, length = 0.1)#
  }#
}
pPower(AZ=T)
pPower(AZ=T, points = 1)
# Add alpha to colors#
col2alpha <- function(col, alpha) {#
  col_rgb <- col2rgb(col)/255#
  rgb(col_rgb[1], col_rgb[2], col_rgb[3], alpha = alpha)#
}#
#
### pPower#
pPower <- function (#
  m0 = 0, m1 = 4, sigma = 1, x_range = 5, n = 1, sig = 0.05,#
  H0 = TRUE, H1 = TRUE, body = TRUE, tail = TRUE, beta = TRUE, power = TRUE,#
  reject = TRUE, level = TRUE, AX = TRUE, AZ = FALSE, points = 0.5#
)#
{#
  # Calculate critical values#
  sigma_m <- sigma / sqrt(n)#
  d <- (m1 - m0) / sigma#
  # X and Ys#
  X0s <- seq(m0 - x_range * sigma_m, m0 + x_range * sigma_m, by = 0.01 * sigma_m)#
  X1s <- seq(m1 - x_range * sigma_m, m1 + x_range * sigma_m, by = 0.01 * sigma_m)#
  Xs <- sort(cbind(X0s, X1s))#
  Y0s <- dnorm(Xs, mean = m0, sd = sigma_m)#
  Y1s <- dnorm(Xs, mean = m1, sd = sigma_m)#
  # Critical X values#
  X_min <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = TRUE)#
  X_max <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = FALSE)#
  ## Tail#
  low_tail <- seq(min(Xs), X_min, by = sigma_m * 0.001)#
  high_tail <- seq (X_max, max(Xs), by = sigma_m * 0.001)#
  alpha_value <- sub("^0\\.", ".", formatC(sig/2, digits = 2, format = "fg"))#
  alpha_com <- sub("^0\\.", ".", formatC(1 - sig, digits = 2, format = "fg"))#
  beta_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m)#
  beta_value <- formatC(beta_value, digits = 2, format = "fg")#
  beta_value <- sub("^0\\.", ".", beta_value)#
  power_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m, lower.tail = FALSE)#
  power_value <- formatC(power_value, digits = 2, format = "f")#
  power_value <- sub("^0\\.", ".", power_value)#
  boddy <- seq(X_min, X_max, by = sigma_m * 0.001)#
  tail_x <- c(min(low_tail), low_tail, max(low_tail), min(high_tail), high_tail, max(high_tail) )#
  tail_y <- c(0, dnorm(low_tail, mean = m0, sd = sigma_m), 0, 0,#
              dnorm(high_tail, mean = m0, sd = sigma_m), 0)#
  tail_col <- col2alpha("#DC143C", alpha = 0.5)#
  body_x <- c(min(boddy), boddy, max(boddy))#
  body_y <- c(0, dnorm(boddy, mean = m0, sd = sigma_m), 0)#
  body_col <- col2alpha("#D2691E", alpha = 0.5)#
  beta_range <- seq(min(min(X1s), X_max), max(min(X1s), X_max), by = sigma_m * 0.001)#
  beta_x <- c(min(X1s), beta_range, X_max)#
  beta_y <- c(0, dnorm(beta_range, mean = m1, sd = sigma_m), 0)#
  beta_col <- col2alpha("#00008B", alpha = 0.5)#
  power_range <- seq( X_max, max(X1s), by = sigma_m * 0.001)#
  power_x <- c(X_max, power_range, max(X1s))#
  power_y <- c(0, dnorm(power_range, mean = m1, sd = sigma_m), 0)#
  power_col <- col2alpha("#1E90FF", alpha = 0.5)#
  label_pos <- seq(min(Xs), max(Xs), by = sigma_m)#
  label_pos <- unique(cbind(label_pos, points))#
#
  ## plot#
  plot(NULL, NULL, xlim = range(Xs), # c(60, 105)#
       ylim = c(0, (1 + 0.01) * max(Y0s) ),#
       axes = FALSE, xlab = "", ylab = "", yaxs = "i")#
  # polygons#
  if (tail) {#
    polygon(tail_x, tail_y, col = tail_col, border = "white")#
    if (level){#
      text(x = X_min - sigma_m * 0.5, y = dnorm(m0, m0, sd = sigma_m) / 15,#
           bquote(alpha / 2 == .(alpha_value)), pos = 2)#
    }#
  }#
  if (body) {#
    polygon( body_x, body_y, col = body_col, border = "white")#
    if (level){#
      text(x = m0 - sigma_m * 0.6, y = dnorm(m0, m0, sd = sigma_m) / 2,#
           bquote(1 - alpha == .(alpha_com)), pos = 3)#
    }#
  }#
#
  if (beta) {#
    polygon(beta_x, beta_y, col = beta_col, border = "white")#
    if (level){#
      text(x = X_max - sigma_m * 0.4, y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(beta == .(beta_value)), pos = 2)#
    }#
  }#
  if (power) {#
    polygon(power_x, power_y, col = power_col, border = "white")#
    if (level){#
      text(x = X_max + abs(m1 - X_max) * 0.5,#
           y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(1-beta == .(power_value)), pos = 4)#
    }#
  }#
  # H_0#
#
  if (H0){#
    lines(Xs, Y0s, col = "#cf232a", lwd = 2)#
    abline(v = m0, lwd = 1)#
    arrows(x0 = m0, y0 = dnorm(m0 + sigma_m, m0, sigma_m),#
           x1 = m0 + sigma_m, y1 = dnorm(m0 + sigma_m, m0, sigma_m),#
           length = 0.1)#
    if (AX) sigma_mm <- sigma_m else sigma_mm <- 1#
    text(x = m0 + sigma_m / 2, y = dnorm(m0 + sigma_m, m0, sigma_m), pos = 1,#
         labels = bquote(sigma[M] == .(round(sigma_mm, 2))))#
  }#
  # H_1#
  if (H1){#
    lines(Xs, Y1s, col = "#d5493a", lwd = 2)#
    abline(v = m1, lwd = 1, col = "gray")#
    mtext(expression(H[0]), side = 3, at = m0)#
    mtext(expression(H[1]),  side = 3, at = m1)#
    mtext(text = bquote("Cohen's d" == .(d)~", n"==.(n)), side = 3, at = (m0 + m1) / 2,#
          padj = -2)#
  }#
  ## X-Axes and Z-Axes#
  AXZ <- function (Baseline = 2.5, Axis = "z") {#
  	llabel <- if (Axis == "X") {label_pos - m0} else {(label_pos - m0) / sigma_m}#
    axis(1, at = c(min(label_pos) - 0.5 * sigma_m, max(label_pos) + 0.5 * sigma_m), labels = c("", ""), lwd.ticks = 0, line = Baseline)#
    axis(1, at = label_pos, label = rep("", length(label_pos)), lwd = 0, lwd.ticks = 1, line = Baseline)#
    axis(1, at = label_pos, label = llabel, lwd = 0, lwd.ticks = 0, line = Baseline - 0.5)#
    mtext(text = bquote(italic(.(Axis))), side = 1, adj = 1.03, line = Baseline - 0.6)#
  }#
#
  if (AX) {#
    AXZ(0, "X")#
    if (AZ) AXZ(2.5, "z")#
  } else {#
  	AXZ(0, "z")#
  }#
#
  ## Critical lines#
  if(reject){#
    abline(v = X_max, lty = 3)#
    text( x = X_max, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
          label = expression(paste("Reject ", H[0])),  pos = 4)#
    arrows(x0 = X_max, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_max + sigma_m, length = 0.1)#
    abline(v = X_min, lty = 3)#
    text(x = X_min, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
         label = expression(paste("Reject ", H[0])), pos = 2)#
    arrows(x0 = X_min, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_min - sigma_m, length = 0.1)#
  }#
}
pPower(AZ=T, sigma = 2, points = 1)
pPower(AZ=T, sigma = 2, points = 2)
pPower(AZ=T, sigma = 2, points = c(0.5, 1.5))
pPower(AZ=T, sigma = 2, points = 1.5)
pPower(AZ=T, sigma = 2, points = NULL)
pPower(AZ=T, sigma = 2, points = 2.5)
pPower(AZ=T, sigma = 2, points = 3)
pPower(AZ=T, sigma = 2, points = 2.5)
pPower(AZ=T, sigma = 2, points = 3.5)
pPower(AZ=T, sigma = 10, points = 3.5)
# Add alpha to colors#
col2alpha <- function(col, alpha) {#
  col_rgb <- col2rgb(col)/255#
  rgb(col_rgb[1], col_rgb[2], col_rgb[3], alpha = alpha)#
}#
#
### pPower#
pPower <- function (#
  m0 = 0, m1 = 4, sigma = 1, x_range = 5, n = 1, sig = 0.05,#
  H0 = TRUE, H1 = TRUE, body = TRUE, tail = TRUE, beta = TRUE, power = TRUE,#
  reject = TRUE, level = TRUE, AX = TRUE, AZ = FALSE, points = 0.5#
)#
{#
  # Calculate critical values#
  sigma_m <- sigma / sqrt(n)#
  d <- (m1 - m0) / sigma#
  # X and Ys#
  X0s <- seq(m0 - x_range * sigma_m, m0 + x_range * sigma_m, by = 0.01 * sigma_m)#
  X1s <- seq(m1 - x_range * sigma_m, m1 + x_range * sigma_m, by = 0.01 * sigma_m)#
  Xs <- sort(cbind(X0s, X1s))#
  Y0s <- dnorm(Xs, mean = m0, sd = sigma_m)#
  Y1s <- dnorm(Xs, mean = m1, sd = sigma_m)#
  # Critical X values#
  X_min <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = TRUE)#
  X_max <- qnorm(sig / 2, mean = m0, sd = sigma_m, lower.tail = FALSE)#
  ## Tail#
  low_tail <- seq(min(Xs), X_min, by = sigma_m * 0.001)#
  high_tail <- seq (X_max, max(Xs), by = sigma_m * 0.001)#
  alpha_value <- sub("^0\\.", ".", formatC(sig/2, digits = 2, format = "fg"))#
  alpha_com <- sub("^0\\.", ".", formatC(1 - sig, digits = 2, format = "fg"))#
  beta_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m)#
  beta_value <- formatC(beta_value, digits = 2, format = "fg")#
  beta_value <- sub("^0\\.", ".", beta_value)#
  power_value <- pnorm(q = high_tail, mean = m1, sd = sigma_m, lower.tail = FALSE)#
  power_value <- formatC(power_value, digits = 2, format = "f")#
  power_value <- sub("^0\\.", ".", power_value)#
  boddy <- seq(X_min, X_max, by = sigma_m * 0.001)#
  tail_x <- c(min(low_tail), low_tail, max(low_tail), min(high_tail), high_tail, max(high_tail) )#
  tail_y <- c(0, dnorm(low_tail, mean = m0, sd = sigma_m), 0, 0,#
              dnorm(high_tail, mean = m0, sd = sigma_m), 0)#
  tail_col <- col2alpha("#DC143C", alpha = 0.5)#
  body_x <- c(min(boddy), boddy, max(boddy))#
  body_y <- c(0, dnorm(boddy, mean = m0, sd = sigma_m), 0)#
  body_col <- col2alpha("#D2691E", alpha = 0.5)#
  beta_range <- seq(min(min(X1s), X_max), max(min(X1s), X_max), by = sigma_m * 0.001)#
  beta_x <- c(min(X1s), beta_range, X_max)#
  beta_y <- c(0, dnorm(beta_range, mean = m1, sd = sigma_m), 0)#
  beta_col <- col2alpha("#00008B", alpha = 0.5)#
  power_range <- seq( X_max, max(X1s), by = sigma_m * 0.001)#
  power_x <- c(X_max, power_range, max(X1s))#
  power_y <- c(0, dnorm(power_range, mean = m1, sd = sigma_m), 0)#
  power_col <- col2alpha("#1E90FF", alpha = 0.5)#
  label_pos <- seq(min(Xs), max(Xs), by = sigma_m)#
  label_pos <- unique(c(label_pos, points))#
#
  ## plot#
  plot(NULL, NULL, xlim = range(Xs), # c(60, 105)#
       ylim = c(0, (1 + 0.01) * max(Y0s) ),#
       axes = FALSE, xlab = "", ylab = "", yaxs = "i")#
  # polygons#
  if (tail) {#
    polygon(tail_x, tail_y, col = tail_col, border = "white")#
    if (level){#
      text(x = X_min - sigma_m * 0.5, y = dnorm(m0, m0, sd = sigma_m) / 15,#
           bquote(alpha / 2 == .(alpha_value)), pos = 2)#
    }#
  }#
  if (body) {#
    polygon( body_x, body_y, col = body_col, border = "white")#
    if (level){#
      text(x = m0 - sigma_m * 0.6, y = dnorm(m0, m0, sd = sigma_m) / 2,#
           bquote(1 - alpha == .(alpha_com)), pos = 3)#
    }#
  }#
#
  if (beta) {#
    polygon(beta_x, beta_y, col = beta_col, border = "white")#
    if (level){#
      text(x = X_max - sigma_m * 0.4, y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(beta == .(beta_value)), pos = 2)#
    }#
  }#
  if (power) {#
    polygon(power_x, power_y, col = power_col, border = "white")#
    if (level){#
      text(x = X_max + abs(m1 - X_max) * 0.5,#
           y = dnorm(m1, m1, sd = sigma_m) / 15,#
           labels = bquote(1-beta == .(power_value)), pos = 4)#
    }#
  }#
  # H_0#
#
  if (H0){#
    lines(Xs, Y0s, col = "#cf232a", lwd = 2)#
    abline(v = m0, lwd = 1)#
    arrows(x0 = m0, y0 = dnorm(m0 + sigma_m, m0, sigma_m),#
           x1 = m0 + sigma_m, y1 = dnorm(m0 + sigma_m, m0, sigma_m),#
           length = 0.1)#
    if (AX) sigma_mm <- sigma_m else sigma_mm <- 1#
    text(x = m0 + sigma_m / 2, y = dnorm(m0 + sigma_m, m0, sigma_m), pos = 1,#
         labels = bquote(sigma[M] == .(round(sigma_mm, 2))))#
  }#
  # H_1#
  if (H1){#
    lines(Xs, Y1s, col = "#d5493a", lwd = 2)#
    abline(v = m1, lwd = 1, col = "gray")#
    mtext(expression(H[0]), side = 3, at = m0)#
    mtext(expression(H[1]),  side = 3, at = m1)#
    mtext(text = bquote("Cohen's d" == .(d)~", n"==.(n)), side = 3, at = (m0 + m1) / 2,#
          padj = -2)#
  }#
  ## X-Axes and Z-Axes#
  AXZ <- function (Baseline = 2.5, Axis = "z") {#
  	llabel <- if (Axis == "X") {label_pos - m0} else {(label_pos - m0) / sigma_m}#
    axis(1, at = c(min(label_pos) - 0.5 * sigma_m, max(label_pos) + 0.5 * sigma_m), labels = c("", ""), lwd.ticks = 0, line = Baseline)#
    axis(1, at = label_pos, label = rep("", length(label_pos)), lwd = 0, lwd.ticks = 1, line = Baseline)#
    axis(1, at = label_pos, label = llabel, lwd = 0, lwd.ticks = 0, line = Baseline - 0.5)#
    mtext(text = bquote(italic(.(Axis))), side = 1, adj = 1.03, line = Baseline - 0.6)#
  }#
#
  if (AX) {#
    AXZ(0, "X")#
    if (AZ) AXZ(2.5, "z")#
  } else {#
  	AXZ(0, "z")#
  }#
#
  ## Critical lines#
  if(reject){#
    abline(v = X_max, lty = 3)#
    text( x = X_max, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
          label = expression(paste("Reject ", H[0])),  pos = 4)#
    arrows(x0 = X_max, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_max + sigma_m, length = 0.1)#
    abline(v = X_min, lty = 3)#
    text(x = X_min, y = dnorm(m0, m0, sd = sigma_m) / 1.1,#
         label = expression(paste("Reject ", H[0])), pos = 2)#
    arrows(x0 = X_min, y0 = dnorm(m0, m0, sd = sigma_m) / 1.16,#
           x1 = X_min - sigma_m, length = 0.1)#
  }#
}
pPower(AZ=T, sigma = 10, points = c(3.5, 5.5))
p <- c(1, 2, -Inf, Inf)
p
p[!infinit()]
?infinite
p[is.finite(p)]
Density_Plot_with_Pologon <- function (p1 = mean, p2 = mean + sd, mean = 100, sd = 10, AX = TRUE, AZ = TRUE, show_area_size = TRUE)#
{#
  points <- c(p1, p2)#
  points <- points[[is.finite(points)]]#
  acqr::pPower(m0 = mean, x_range = 4, m1 = mean, sigma = sd, H1 = F, reject = F, level = F, beta = F, power = F, body = F, tail = F, AX = AX, AZ = AZ, points = points)#
  cnvtp <- function(pp) if (pp == Inf) mean + 4 * sd else if (pp == -Inf) mean - 4 * sd else pp#
  if (! is.na(p1) & ! is.na(p2)){#
    pt1 <- cnvtp(p1)#
    pt2 <- cnvtp(p2)#
    polygon(c(pt1, pt1,                        seq(pt1, pt2, length.out = 1000)          ,        pt2,           pt2),#
            c(0,  dnorm(pt1, mean, sd), dnorm(seq(pt1, pt2, length.out = 1000), mean, sd), dnorm(pt2, mean, sd), 0),#
            col = col2alpha("#f4cdba", alpha = 0.8) , border = "#af1e23", lwd = 2) ## col2alpha is defined in pPower.R#
    percent <- function(x, digits = 2, format = "f", ...) {#
      paste0(formatC(100 * x, format = format, digits = digits, ...), "%")#
    }#
    area_size <- if(p1 == -Inf) pnorm(p2, mean, sd)#
                   else if (p2 == +Inf) pnorm(p1, mean, sd, lower.tail = FALSE)#
                else pnorm(p2, mean, sd) - pnorm(p1, mean, sd)#
    area_size <- percent(area_size, 2)#
    if (show_area_size) {#
      text(x = mean(c(pt1, pt2)), y = dnorm(mean + 2 * sd, mean, sd), label = area_size, pos = 1)#
    }#
  }#
}
Density_Plot_with_Pologon
Density_Plot_with_Pologon()
Density_Plot_with_Pologon <- function (p1 = mean, p2 = mean + sd, mean = 100, sd = 10, AX = TRUE, AZ = TRUE, show_area_size = TRUE)#
{#
  points <- c(p1, p2)#
  points <- points[is.finite(points)]#
  acqr::pPower(m0 = mean, x_range = 4, m1 = mean, sigma = sd, H1 = F, reject = F, level = F, beta = F, power = F, body = F, tail = F, AX = AX, AZ = AZ, points = points)#
  cnvtp <- function(pp) if (pp == Inf) mean + 4 * sd else if (pp == -Inf) mean - 4 * sd else pp#
  if (! is.na(p1) & ! is.na(p2)){#
    pt1 <- cnvtp(p1)#
    pt2 <- cnvtp(p2)#
    polygon(c(pt1, pt1,                        seq(pt1, pt2, length.out = 1000)          ,        pt2,           pt2),#
            c(0,  dnorm(pt1, mean, sd), dnorm(seq(pt1, pt2, length.out = 1000), mean, sd), dnorm(pt2, mean, sd), 0),#
            col = col2alpha("#f4cdba", alpha = 0.8) , border = "#af1e23", lwd = 2) ## col2alpha is defined in pPower.R#
    percent <- function(x, digits = 2, format = "f", ...) {#
      paste0(formatC(100 * x, format = format, digits = digits, ...), "%")#
    }#
    area_size <- if(p1 == -Inf) pnorm(p2, mean, sd)#
                   else if (p2 == +Inf) pnorm(p1, mean, sd, lower.tail = FALSE)#
                else pnorm(p2, mean, sd) - pnorm(p1, mean, sd)#
    area_size <- percent(area_size, 2)#
    if (show_area_size) {#
      text(x = mean(c(pt1, pt2)), y = dnorm(mean + 2 * sd, mean, sd), label = area_size, pos = 1)#
    }#
  }#
}
Density_Plot_with_Pologon()
