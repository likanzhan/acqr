RegCod
library(acqr)
RegCod()
StudRes <- function(formula, data){#
 if ( class(formula) == "lm") {#
  fm <- formula#
  data <- formula[["model"]]#
} else {	#
  fm <- lm(formula, data = data)#
  data <- data	#
}#
  n <- nrow(model.matrix(formula))#
  k <- ncol(model.matrix(formula)) - 1#
  SRI <- function (i) {#
	 Rei <- residuals(fm)[i]#
     SEi <- sqrt (deviance(update(fm, data = data[-i, ])) / (n - k - 2))#
     Hi <- hatvalues(fm)[i]#
	 StuResi <- Rei / (SEi * sqrt(1 - Hi))#
	 return(StuResi)#
  }	#
  StuRes <- sapply(1:n, FUN = SRI)#
  p.val <- 2 * pt(abs(StuRes), n - k - 2, lower.tail = FALSE)#
  adjusted.p <- 1 - (1 - p.val) ^ n#
  Bonfer.p <- 2 * n * p.val / 2#
  StudRes <- data.frame(#
    Student.Res = StuRes, #
    p.values = p.val, #
    Bonfer.p = Bonfer.p)#
  return(StudRes)#
}
suppressWarnings(suppressMessages(library(car)))#
Davis <- Davis[!is.na (Davis[, "repwt"]), ]#
Davis[, "sex"] <- factor(#
   Davis[, "sex"], levels = c("M", "F"))#
fm1101 <- lm(repwt ~ weight * sex, data = Davis)
rstudent(fm1101)#
StudRes(fm1101)
rstudent(fm1101)#
StudRes(repwt ~ weight * sex, data = Davis)
StudRes <- function(formula, data){#
 if ( class(formula) == "lm") {#
  fm <- formula#
  data <- formula[["model"]]#
} else {	#
  fm <- lm(formula, data = data)#
}#
  n <- nrow(model.matrix(fm))#
  k <- ncol(model.matrix(fm)) - 1#
  SRI <- function (i) {#
	 Rei <- residuals(fm)[i]#
     SEi <- sqrt (deviance(update(fm, data = data[-i, ])) / (n - k - 2))#
     Hi <- hatvalues(fm)[i]#
	 StuResi <- Rei / (SEi * sqrt(1 - Hi))#
	 return(StuResi)#
  }	#
  StuRes <- sapply(1:n, FUN = SRI)#
  p.val <- 2 * pt(abs(StuRes), n - k - 2, lower.tail = FALSE)#
  adjusted.p <- 1 - (1 - p.val) ^ n#
  Bonfer.p <- 2 * n * p.val / 2#
  StudRes <- data.frame(#
    Student.Res = StuRes, #
    p.values = p.val, #
    Bonfer.p = Bonfer.p)#
  return(StudRes)#
}
rstudent(fm1101)#
StudRes(repwt ~ weight * sex, data = Davis)
rstudent(fm1101)#
StudRes(fm1101)
MeanShift <- function(formula, data) {#
 if (class(formula) == "lm") {#
  fmO <- formula#
  data <- formula[["model"]]#
 } else {	#
  fmO <- lm(formula, data = data)#
 }#
MeanShiftI <- function (i) {#
data[, "D"] <- replace(rep(0, nrow(data)), i, 1)#
fmN <- update(fmO, .~. + D)#
fmNS <- summary(fmN)#
res <- as.data.frame(coefficients(fmNS))["D", ]#
res[, "adj.p"] <-  2 * nrow(data) * res[, 4] / 2#
return(res)#
}	#
  MeanShift <- sapply(1:nrow(data), FUN = MeanShiftI)	#
  MeanShift <- t(MeanShift)#
  return(MeanShift)#
}
library(car)#
Davis <- Davis[!is.na (Davis[, "repwt"]), ]#
Davis[, "sex"] <- factor(#
   Davis[, "sex"], levels = c("M", "F"))#
fm01 <- lm(repwt ~ weight * sex, data = Davis)#
rstudent(fm01)#
MeanShift(repwt ~ weight * sex, data = Davis)#
MeanShift(fm01)#
#
fm02 <- lm(prestige ~ education + income, data = Duncan)#
rstudent(fm02)#
MeanShift(prestige ~ education + income, data = Duncan)#
MeanShift(fm02)
MeanShift <- function(formula, data) {#
 if (class(formula) == "lm") {#
  fmO <- formula#
  data <- formula[["model"]]#
 } else {	#
  fmO <- lm(formula, data = data)#
 }#
MeanShiftI <- function (i) {#
data[, "D"] <- replace(rep(0, nrow(data)), i, 1)#
fmN <- update(fmO, .~. + D, data = data)#
fmNS <- summary(fmN)#
res <- as.data.frame(coefficients(fmNS))["D", ]#
res[, "adj.p"] <-  2 * nrow(data) * res[, 4] / 2#
return(res)#
}	#
  MeanShift <- sapply(1:nrow(data), FUN = MeanShiftI)	#
  MeanShift <- t(MeanShift)#
  return(MeanShift)#
}
library(car)#
Davis <- Davis[!is.na (Davis[, "repwt"]), ]#
Davis[, "sex"] <- factor(#
   Davis[, "sex"], levels = c("M", "F"))#
fm01 <- lm(repwt ~ weight * sex, data = Davis)#
rstudent(fm01)#
MeanShift(repwt ~ weight * sex, data = Davis)#
MeanShift(fm01)#
#
fm02 <- lm(prestige ~ education + income, data = Duncan)#
rstudent(fm02)#
MeanShift(prestige ~ education + income, data = Duncan)#
MeanShift(fm02)
libraru(acqr)
library(acqr)
fm02 <- lm(prestige ~ education + income, data = Duncan)#
rstudent(fm02)#
MeanShift(prestige ~ education + income, data = Duncan)#
MeanShift(fm02)
library(car)
fm02 <- lm(prestige ~ education + income, data = Duncan)#
rstudent(fm02)#
MeanShift(prestige ~ education + income, data = Duncan)#
MeanShift(fm02)
fm02 <- lm(prestige ~ education + income, data = Duncan)#
rstudent(fm02)#
MeanShift(prestige ~ education + income, data = Duncan)#
StudRes(fm02)
suppressWarnings(suppressMessages(library(car)))#
Davis <- Davis[!is.na (Davis[, "repwt"]), ]#
Davis[, "sex"] <- factor(#
   Davis[, "sex"], levels = c("M", "F"))#
fm1101 <- lm(repwt ~ weight * sex, data = Davis)
MeanShift <- function(formula, data) {#
 if (class(formula) == "lm") {#
  fmO <- formula#
  data <- formula[["model"]]#
 } else {	#
  fmO <- lm(formula, data = data)#
 }#
MeanShiftI <- function (i) {#
data[, "D"] <- replace(rep(0, nrow(data)), i, 1)#
fmN <- update(fmO, .~. + D, data = data)#
fmNS <- summary(fmN)#
res <- coefficients(fmNS)["D", c(3:4)]#
#res["Bonfer.p", ] <-  2 * nrow(data) * res[2, ] / 2#
return(res)#
}	#
  MeanShift <- sapply(1:nrow(data), FUN = MeanShiftI)#
  MeanShift <- t(MeanShift)#
  #MeanShift[, 3] <- 2 * nrow(data) * MeanShift[, 2] / 2#
  #colnames(MeanShift) <- c("Student.Res", "p.values", "Bonfer.p")#
#  MeanShift <- as.matrix(MeanShift, nrow = nrow(data), byrow = FALSE)#
#  MeanShift <- as.data.frame(MeanShift)#
#  colnames(MeanShift) <- c("Student.Res", "p.values", "Bonfer.p")	#
  return(MeanShift)#
}
sr<-MeanShift(fm1101)
str(sr)
as.data.frame(sr)
MeanShift <- function(formula, data) {#
 if (class(formula) == "lm") {#
  fmO <- formula#
  data <- formula[["model"]]#
 } else {	#
  fmO <- lm(formula, data = data)#
 }#
MeanShiftI <- function (i) {#
data[, "D"] <- replace(rep(0, nrow(data)), i, 1)#
fmN <- update(fmO, .~. + D, data = data)#
fmNS <- summary(fmN)#
res <- coefficients(fmNS)["D", c(3:4)]#
#res["Bonfer.p", ] <-  2 * nrow(data) * res[2, ] / 2#
return(res)#
}	#
  MeanShift <- sapply(1:nrow(data), FUN = MeanShiftI)#
  MeanShift <- as.data.frame(t(MeanShift))#
  MeanShift[, 3] <- 2 * nrow(data) * MeanShift[, 2] / 2#
  #colnames(MeanShift) <- c("Student.Res", "p.values", "Bonfer.p")#
#  MeanShift <- as.matrix(MeanShift, nrow = nrow(data), byrow = FALSE)#
#  MeanShift <- as.data.frame(MeanShift)#
#  colnames(MeanShift) <- c("Student.Res", "p.values", "Bonfer.p")	#
  return(MeanShift)#
}
sr<-MeanShift(fm1101)
str(sr)
MeanShift <- function(formula, data) {#
 if (class(formula) == "lm") {#
  fmO <- formula#
  data <- formula[["model"]]#
 } else {	#
  fmO <- lm(formula, data = data)#
 }#
MeanShiftI <- function (i) {#
data[, "D"] <- replace(rep(0, nrow(data)), i, 1)#
fmN <- update(fmO, .~. + D, data = data)#
fmNS <- summary(fmN)#
res <- coefficients(fmNS)["D", c(3:4)]#
#res["Bonfer.p", ] <-  2 * nrow(data) * res[2, ] / 2#
return(res)#
}	#
  MeanShift <- sapply(1:nrow(data), FUN = MeanShiftI)#
  MeanShift <- as.data.frame(t(MeanShift))#
  MeanShift[, 3] <- 2 * nrow(data) * MeanShift[, 2] / 2#
  colnames(MeanShift) <- c("Student.Res", "p.values", "Bonfer.p")	#
  return(MeanShift)#
}
sr<-MeanShift(fm1101)
str(sr)
library(acqr)
JointInfl
?JointInfl
cor(Duncan)
library(car)
cor(Duncan)
str(Duncan)
str(Duncan[, -"type"])
str(Duncan[, -c("type")])
Duncan[, -c("type")]
Duncan[, -1]
str(Duncan[, -1])
cor(Duncan[, -1])
cor(Duncan[, -c("type")])
cor(Duncan[, -1])
?summary
methods(class="summary.lm")
methods(summary.lm)
?summary.lm
?plot
?plot.fwdlm
library(foward)
install.packages(forward)
install.packages("forward", dependencies=T)
library(foward)
library(forward)
?fwdlm
suppressWarnings(suppressMessages(library(forward)))#
fm1107 <- fwdlm(prestige ~ -1 + education + income, data = Duncan, trace = FALSE)#
summary(fm1107)
fm1107
Duncan[6, ]
Duncan[15, ]
Duncan[16, ]
str(fm1107)
fm1107[["Unit"]]
x<-fm1107[["Unit"]]
str(x)
x<-fm1107[["Unit"]][41:44]
x
fm1107$Unit
fm1107
n = 5;#
slope = -1;#
NP = c(n + 1, 0, n+1, -1);#
adj = 1
n
slope
NP
adj
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)
df0
Points <- matrix(NP, ncol = 2, byrow = FALSE)
Points
Points <- matrix(NP, ncol = 2, byrow = T)
Points
df1 <- as.data.frame(Points)
df2
df1 <- as.data.frame(Points)
df1
df2 <- rbind(df0, df1)
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
Points <- matrix(NP, ncol = 2, byrow = TRUE)#
df1 <- as.data.frame(Points)#
df2 <- rbind(df0, df1)
df2
df1
df0
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
Points <- matrix(NP, ncol = 2, byrow = TRUE)#
df1 <- cbind(Points, GR = 2)#
df2 <- rbind(df0, df1)
df1
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
Points <- matrix(NP, ncol = 2, byrow = TRUE, dimnames = c("XX", "YY"))#
df1 <- cbind(Points, GR = 2)#
df2 <- rbind(df0, df1)
df1
PP <- matrix(NP, ncol = 2, byrow = TRUE)
PP
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))
PP
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2
PP
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2#
colnames(PP) <- c("X", "Y", "GR")#
df2 <- rbind(df0, PP)
df2
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df2 <- rbind(df0, PP)
df2
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 0:max(GR)) {#
	abline(#
	lm(Y ~ X, data = df[1:(n + i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(GR), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df[, "X"]) + adj, las = 1, padj = 0.2)	#
}
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df[1:(n + i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df[, "X"]) + adj, las = 1, padj = 0.2)	#
}
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df[1:(n+i), ]), #
	lty = ifelse(df1[, "GR"] == 1, 1, 1 + i),#
	lwd = ifelse(df1[, "GR"] == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df[, "X"]) + adj, las = 1, padj = 0.2)	#
}
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i), ]), #
	lty = ifelse(df1[, "GR"] == 1, 1, 1 + i),#
	lwd = ifelse(df1[, "GR"] == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df[, "X"]) + adj, las = 1, padj = 0.2)	#
}
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i), ]), #
	lty = ifelse(df1[, "GR"] == 1, 1, 1 + i),#
	lwd = ifelse(df1[, "GR"] == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP=c(2.5, 1))
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 0:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP=c(mean(1:5), 1))
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP=c(mean(1:5), 1))
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1)
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP = c(3, 1, 4, 1, 5, 1))
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP = c(3, 1, 4, 1, 5, 1, 6, 1))
c(1, 10, 19)[5]
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19, 20, 21)[GR]#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP = c(3, 1, 4, 1, 5, 1, 6, 1))
?pch
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP = c(3, 1, 4, 1, 5, 1, 6, 1))
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
XO <- 1:n#
YO <- slope * XO#
df0 <- data.frame(X = 1:n, Y = YO, GR = 1)#
PP <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
PP[, "GR"] <- 2:(nrow(PP) + 1)#
colnames(PP) <- c("X", "Y", "GR")#
df1 <- rbind(df0, PP)#
plot(Y ~ X, data = df1, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = GR *2#
     )#
for (i in 1:max(df1[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df1[1:(n+i-1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df1[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df1[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df1[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(slope = 1, NP = c(3, 1, 4, 1, 5, 1, 6, 1))
JointInfl <- function(#
n = 5,#
slope = -1, #
NP = c(n + 1, 0, n+1, -1), #
adj = 1#
){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 0:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n+i), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(NP= NULL)
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(NP= NA)
?isna
?is.na
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( ! is.na(NP) ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
NP = c(mean(1:5), 1)
is.na(NP)
! is.na(NP)
length(NP)
length(NA)
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(NP=NA)
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1, 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(NP= c(3, 1, 4, 2))
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = c(1, 10, 19)[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1 | i == max(df2[, "GR"]), 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
?pch
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = rep(c(1, 10, 19, 5, 9, 23), ceiling(max(GR) / 6))[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1 | i == max(df2[, "GR"]), 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl()
JointInfl <- function(#
n = 5,#
slope = 1, #
NP = c(mean(1:5), 1), #
adj = 1#
){#
if ( length(NP) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * XO, GR = 1)#
df1 <- as.data.frame(matrix(NP, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = rep(c(1, 10, 19, 5, 9, 23), ceiling(max(GR) / 6))[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1 | i == max(df2[, "GR"]), 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}#
JointInfl(NP = c(mean(1:5), -3))
LeverageDiscrepancyInfluence <- function(#
Points = c(mean(1:5), 1), #
n = 5,#
slope = 1, #
adj = 1#
){#
if ( length(Points) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * X, GR = 1)#
df1 <- as.data.frame(matrix(Points, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = rep(c(1, 10, 19, 5, 9, 23), ceiling(max(GR) / 6))[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1 | i == max(df2[, "GR"]), 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}
LeverageDiscrepancyInfluence()
LeverageDiscrepancyInfluence <- function(#
Points = c(mean(1:5), 1), #
n = 5,#
slope = 1, #
adj = 1#
){#
if ( length(Points) >= 2 ){#
df0 <- data.frame(X = 1:n, Y = slope * (1:n), GR = 1)#
df1 <- as.data.frame(matrix(Points, ncol = 2, byrow = TRUE))#
df1[, "GR"] <- 2:(nrow(df1) + 1)#
colnames(df1) <- c("X", "Y", "GR")#
df2 <- rbind(df0, df1)	#
} else {#
	df2 <- df0#
}#
#
plot(Y ~ X, data = df2, cex = 2.5,#
     xlim = c(min(X) - adj, max(X) + adj), #
     ylim = c(min(Y) - adj, max(Y) + adj),#
     xaxt = "n", yaxt = "n", xlab = "", ylab = "", font.lab = 2, #
     pch = rep(c(1, 10, 19, 5, 9, 23), ceiling(max(GR) / 6))[GR]#
     )#
for (i in 1:max(df2[, "GR"])) {#
	abline(#
	lm(Y ~ X, data = df2[1:(n + i - 1), ]), #
	lty = ifelse(i == 1 | i == max(df2[, "GR"]), 1, 1 + i),#
	lwd = ifelse(i == max(df2[, "GR"]), 2, 1)#
	)#
}#
mtext("Y", side = 2, at = max(df2[, "Y"]) + adj, las = 2, adj = 1.5)#
mtext("X", side = 1, at = max(df2[, "X"]) + adj, las = 1, padj = 0.2)	#
}
LeverageDiscrepancyInfluence()
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(expression(mu), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu = .(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(expression(mu) = bquote(mean), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mean), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu = .(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu, = , .(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu, = , .(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu, = , .(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu, = , .(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu == ~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu == ~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean, lty = 2)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2)
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean, lty = 2)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean, lty = 2)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + 1.1 * sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean, lty = 2)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, MM = TRUE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (MM) {#
 abline(v = mean, lty = 2)#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 2, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point))), side = 1, adj = (3 + 6 / sd ) /6, padj = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6, padj = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = F, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2)#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, xaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = FALSE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = (3 + 6 / sd ) /6)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = point - mean)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = point)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, adj = point - mean)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, at = point)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.05)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(0,2, arrow=T)
Density_Plot(0,2, arrow=T, point = 3)
Density_Plot(70, 3, arrow=T, point = 78)
Density_Plot(70, 3, arrow=T, point = 76)
Density_Plot(70, 4, arrow=T, point = 76)
Density_Plot(70, 12, arrow=T, point = 76)
Density_Plot(70, 3, arrow=T, point = 76)
Density_Plot(70, 3, arrow=T, point = 76, AX = F)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = 5#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)#
#
}
Density_Plot(70, 3, arrow=T, point = 76, AX = F)
Density_Plot <- function(#
mean, sd,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = TRUE, arrow = FALSE, point = NULL#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
mtext(bquote(mu==~.(mean)), 1, line = 0.3)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ){#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.05)	#
}#
if (arrow){#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)	#
}#
#
}
Density_Plot(70, 3, arrow=T, point = 76, AX = F)
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), pos = 4)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0.01, label = bquote(mu==~.(mean)), pos = 4)#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot(70, 3, arrow=T, AX = F)
?text
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0.01, label = bquote(mu==~.(mean)), adj = [0, 0])#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
?text
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0.01, label = bquote(mu==~.(mean)), adj = c(0, 0))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0.01, label = bquote(mu==~.(mean)), adj = c(0, 1))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(0, 1))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(0, 0))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(0, -0.5))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(0.1, -0.5))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(-0.1, -0.5))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(-0.1, -0.6))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
Density_Plot <- function(#
mean, sd, point = NULL,#
X = seq((mean - 3 * sd),  (mean + 3 * sd), by = 0.01),#
AZ = FALSE, AX = FALSE, arrow = FALSE#
){#
plot(#
  X, dnorm(X, mean, sd), xlim = c(min(X), max(X)),#
  type = "l", xlab = "", ylab = "", axes = FALSE, col = "#af1e23", lwd = 2, yaxs = "i")#
text(x= mean, y = 0, label = bquote(mu==~.(mean)), adj = c(-0.1, -0.7))#
axis(1, at = c(min(X) - 1.5 * sd, max(X) + 1.5 * sd), labels = c("", ""), line = 0, lwd.ticks = 0)#
if (AX) {#
axis(1, at = seq(min(X) - 1 * sd, max(X) + 1 * sd, by = sd), lwd = 0, line = 0, lwd.ticks = 1)	#
}#
mtext(expression(italic("X")), side = 1, line = -0.5, adj = 1.02)#
if (AZ) {#
axis(1, at = c(mean - 3.5 * sd, mean + 3.5 * sd), labels = c("", ""), line = 2.5, lwd.ticks = 0)#
axis(#
  1, at = seq(mean - 3 * sd, mean + 3 * sd, by = sd), #
  labels = seq(-3, 3, by = 1), line = 2.5, lwd.ticks = 1)#
mtext(expression(italic("z")), side = 1, line = 2, adj = 1.02)	#
}#
if (arrow) {#
segments(#
  x0 = seq(mean - 2 * sd, mean + 2 * sd, by = sd), y0 = 0,#
  y1 = c(rep(dnorm(mean + sd, mean, sd), 2), dnorm(mean, mean, sd), rep(dnorm(mean + sd, mean, sd), 2)),#
  lty = 5)#
text(#
  x = mean + sd / 2, y = dnorm(mean + sd, mean, sd),#
  pos = 3, label = bquote(sigma == ~.(sd)))#
arrows(#
  x0 = c(mean, mean, mean + sd, mean - sd), y0 = dnorm(mean + sd, mean, sd),#
  x1 = c(mean + sd, mean - sd, mean + 2 * sd, mean - 2 * sd), length = 0.08)	#
}#
if (!is.null(point)) {#
for (point in point) {#
mtext(bquote(X == ~.(point)), side = 1, at = point, line = 2)#
arrows(point, -dnorm(mean + sd, mean, sd) / 6, point, 0, xpd = TRUE, length = 0.08)		#
}#
}#
}
Density_Plot(70, 3, arrow=T, AX = F)
